{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/bus/bus.component.html","./src/app/components/buses/buses.component.html","./src/app/components/conductor/conductor.component.html","./src/app/components/edit-buses/edit-buses.component.html","./src/app/components/home/home.component.html","./src/app/components/mapa/mapa-editar.component.html","./src/app/components/mapa/mapa.component.html","./src/app/components/mapa2/mapa2.component.html","./src/app/components/search/search.component.html","./src/app/components/shared/navbar/navbar.component.html","./src/app/components/tarjeta-bus/tarjeta-bus.component.html","./src/app/components/usuario/login/login.component.html","./src/app/components/usuario/register/register.component.html","./node_modules/tslib/tslib.es6.js","./src/app/Class/marcador.class.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/components/bus/bus.component.css","./src/app/components/bus/bus.component.ts","./src/app/components/buses/buses.component.ts","./src/app/components/conductor/conductor.component.css","./src/app/components/conductor/conductor.component.ts","./src/app/components/edit-buses/edit-buses.component.css","./src/app/components/edit-buses/edit-buses.component.ts","./src/app/components/home/home.component.ts","./src/app/components/mapa/mapa-editar.component.ts","./src/app/components/mapa/mapa.component.css","./src/app/components/mapa/mapa.component.ts","./src/app/components/mapa2/mapa2.component.css","./src/app/components/mapa2/mapa2.component.ts","./src/app/components/search/search.component.ts","./src/app/components/shared/navbar/navbar.component.ts","./src/app/components/tarjeta-bus/tarjeta-bus.component.ts","./src/app/components/usuario/login/login.component.ts","./src/app/components/usuario/register/register.component.ts","./src/app/guards/admin.guard.ts","./src/app/guards/conductor.guard.ts","./src/app/material.module.ts","./src/app/models/bus.ts","./src/app/models/ruta.ts","./src/app/models/user.ts","./src/app/models/user2.ts","./src/app/services/auth.service.ts","./src/app/services/bus.service.ts","./src/app/services/ruta.service.ts","./src/app/services/rutas.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-navbar>\\n</app-navbar>\\n\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\\n<!-- //anterior de solo mapa\\n\\n<mat-toolbar color=\\\"primary\\\">\\n    <span>Mapa</span>\\n</mat-toolbar>\\n\\n<div class=\\\"main-container\\\"> -->\\n<!-- <h3>Raised Buttons</h3>\\n    <div class=\\\"example-button-row\\\">\\n        <button mat-raised-button>Basic</button>\\n        <button mat-raised-button color=\\\"primary\\\">Primary</button>\\n        <button mat-raised-button color=\\\"accent\\\">Accent</button>\\n        <button mat-raised-button color=\\\"warn\\\">Warn</button>\\n        <button mat-raised-button disabled>Disabled</button>\\n        <a mat-raised-button routerLink=\\\".\\\">Link</a>\\n    </div>\\n\\n    <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar> -->\\n<!-- <app-mapa></app-mapa>\\n</div> -->\"","export default \"<h1 class=\\\"animated fadeIn\\\">{{ruta.nombre | uppercase}} <small>({{ ruta.Fecha | date:'y' }})</small></h1>\\n<hr>\\n\\n<div class=\\\"row animated fadeIn fast\\\">\\n\\n    <div class=\\\"col-md-4\\\">\\n\\n        <img [src]=\\\"ruta.imagenBus\\\" [alt]=\\\"ruta.nombre\\\" class=\\\"img-fluid\\\">\\n        <br><br>\\n        <a [routerLink]=\\\"['/buses']\\\" class=\\\" btn btn-outline-danger btn-block \\\"> Regresar..</a>\\n    </div>\\n\\n    <div class=\\\"col-md-8 \\\">\\n        <h3>{{ruta.nombre}}</h3>\\n        <hr>\\n        <p>\\n            {{ruta.descripcion}}\\n        </p>\\n        <img [src]=\\\"ruta.imagenTipoBus \\\" [alt]=\\\"ruta.imagenTipoBus\\\" class=\\\"img-fluid\\\">\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"row animated fadeIn fast\\\">\\n\\n    <div class=\\\"col-md-4\\\">\\n\\n    </div>\\n\\n    <div class=\\\"col-md-8 \\\">\\n        <h3>Numero de buses asociados a la ruta: {{ruta.NumBusesAsociados}}</h3>\\n        <h3>Buses asociados a la ruta:</h3>\\n\\n        <table class=\\\"table table-bordered table-striped table-sm\\\">\\n            <thead>\\n                <tr>\\n                    <th>Placa</th>\\n                    <th>coordenadas</th>\\n                    <th>Operaciones</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let bus of BusesAsociadosRuta\\\">\\n                    <td>{{bus.placa}}</td>\\n                    <td> {{bus.latitud}}, {{bus.longitud}}, {{bus.sentido}}</td>\\n\\n                    <td>\\n                        <button (click)=\\\"UbicarEnMapa(bus.latitud,bus.longitud,bus.sentido);\\\" type=\\\"button\\\" title=\\\"Ubicar en Mapa este Bus\\\" class=\\\"btn btn-success btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalAsignarRutaBus\\\">\\n                        <i class=\\\"material-icons\\\">directions_bus</i>\\n                    </button>&nbsp;\\n                    </td>\\n\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n\\n</div>\\n\\n<mat-card>\\n\\n    <mat-card-title>\\n        Mapa\\n    </mat-card-title>\\n\\n    <!-- (centerChange)= (zoomChange) -->\\n\\n    <mat-card-content>\\n        <agm-map [latitude]=\\\"latCentroMapa\\\" [longitude]=\\\"lngCentroMapa\\\" [zoom]=\\\"15\\\">\\n            <!-- <agm-circle [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [radius]=\\\"30\\\" [fillColor]=\\\"'red'\\\" [circleDraggable]=\\\"true\\\" [editable]=\\\"true\\\">></agm-circle> -->\\n            <agm-marker *ngFor=\\\"let marcador of marcadores; let i = index\\\" [iconUrl]=\\\"'assets/carro.bmp'\\\" [label]=\\\"marcador.placa\\\" [latitude]=\\\"marcador.latitud\\\" [longitude]=\\\"marcador.longitud\\\">\\n\\n                <agm-info-window>\\n                    <strong>{{marcador.placa}}</strong>\\n                    <p>\\n                        {{marcador.ruta.nombre}} , {{marcador.ruta.descripcion}}\\n                    </p>\\n                    <div>\\n                        <button (click)=\\\"CuadroDialogo(marcador)\\\" mat-raised-button color=\\\"primary\\\">Ver mas...</button>\\n                    </div>\\n                </agm-info-window>\\n\\n            </agm-marker>\\n        </agm-map>\\n    </mat-card-content>\\n\\n</mat-card>\"","export default \"<h1 class=\\\"my-5\\\">RUTAS DE LOS DIFERENTES BUSES DE METROLINEA</h1>\\n<hr>\\n<div class=\\\"card-columns\\\">\\n\\n    <!-- *ngFor=\\\"let bus of buses ; let i=index\\\" -->\\n\\n    <app-tarjeta-bus [termino]=\\\"ruta.nombre\\\" [ruta]=\\\"ruta\\\" *ngFor=\\\"let ruta of rutas ;\\\"></app-tarjeta-bus>\\n    <!-- <app-tarjeta-bus [termino]=\\\"bus.nombre\\\" [bus]=\\\"bus\\\" *ngFor=\\\"let bus of busService.buses\\\"></app-tarjeta-bus> -->\\n\\n\\n\\n</div>\"","export default \"<div class=\\\"jumbotron jumbotron-fluid animated fadeIn \\\">\\n    <div class=\\\"container\\\">\\n        <h1 class=\\\"display-4\\\">Compartir Ubicación GPS Para Conductores</h1>\\n        <br>\\n\\n        <h2 *ngIf=\\\"busAsociadoConductor.RutaAsociada.nombre !== null\\\">La Ruta Asignada es: {{busAsociadoConductor.RutaAsociada.nombre}} </h2>\\n        <h2 *ngIf=\\\"busAsociadoConductor.placa !== null\\\">La Placa del Bus Asignado es: {{busAsociadoConductor.placa}} </h2>\\n\\n        <h2 *ngIf=\\\"busAsociadoConductor.RutaAsociada.nombre === null\\\">Aún no tiene ruta Asignada</h2>\\n        <h2 *ngIf=\\\"busAsociadoConductor.placa === null\\\">Aún no tiene Bus Asignado</h2>\\n\\n\\n    </div>\\n\\n    <!-- <div class=\\\"main-container\\\">\\n        <h3>Raised Buttons</h3>\\n        <div class=\\\"example-button-row\\\">\\n            <button mat-raised-button>Basic</button>\\n            <button mat-raised-button color=\\\"primary\\\">Primary</button>\\n            <button mat-raised-button color=\\\"accent\\\">Accent</button>\\n            <button mat-raised-button color=\\\"warn\\\">Warn</button>\\n            <button mat-raised-button disabled>Disabled</button>\\n            <a mat-raised-button routerLink=\\\".\\\">Link</a>\\n        </div>\\n\\n        <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n\\n    </div> -->\\n\\n\\n\\n    <form class=\\\"user\\\" #posicionForm=\\\"ngForm\\\">\\n\\n        <br><br><br><br>\\n        <label class=\\\"col-md-4 form-control-label\\\" for=\\\"text-input\\\"></label>\\n        <button id=\\\"mostrarPosicion\\\" mat-raised-button class=\\\"col-lg-3\\\" (click)=\\\"mostrarPosicion()\\\" color=\\\"accent\\\">Mostrar Posición</button>\\n        <!-- <label class=\\\"col-md-2 form-control-label\\\" for=\\\"text-input\\\"></label> -->\\n        <button id=\\\"noMostrarPosicion\\\" mat-raised-button class=\\\"col-lg-3\\\" (click)=\\\"noMostrarPosicion()\\\" color=\\\"warn\\\">No Mostrar Posición</button>\\n        <br><br><br><br>\\n        <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\"></label>\\n            <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\">Longitud</label>\\n            <div class=\\\"col-md-3\\\">\\n                <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"longitud\\\" #longitud=\\\"ngModel\\\" [(ngModel)]=\\\"busAsociadoConductor.longitud\\\" placeholder=\\\"Longitud\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\"></label>\\n            <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\">Latitud</label>\\n            <div class=\\\"col-md-3\\\">\\n                <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"latitud\\\" #latitud=\\\"ngModel\\\" [(ngModel)]=\\\"busAsociadoConductor.latitud\\\" placeholder=\\\"Latitud\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\"></label>\\n            <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\">Sentido</label>\\n            <div class=\\\"col-md-3\\\">\\n                <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"sentido\\\" #sentido=\\\"ngModel\\\" [(ngModel)]=\\\"busAsociadoConductor.sentido\\\" placeholder=\\\"Sentido\\\">\\n            </div>\\n        </div>\\n    </form>\\n\\n\\n</div>\"","export default \"<!-- COMPILED AND MINIFIED CSS -->\\n<!-- <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\\\"> -->\\n<!-- MATERIAL ICONS -->\\n<link href=\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\" rel=\\\"stylesheet\\\">\\n<link rel=\\\"stylesheet\\\" href=\\\"https://www.w3schools.com/w3css/4/w3.css\\\">\\n\\n\\n<div class=\\\"row\\\" style=\\\"align-content: initial\\\">\\n\\n    <div class=\\\"col-lg-12 my-5\\\">\\n\\n\\n        <!-- Tabla Listado Rutas -->\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <i class=\\\"fa fa-address-book\\\"></i> Rutas\\n                <button (click)=\\\"resetForm(busForm)\\\" type=\\\"button\\\" title=\\\"Crear Ruta\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalActualizarRutas\\\">\\n                            <i class=\\\"material-icons\\\">add_to_photos</i>&nbsp;Nueva Ruta&nbsp;\\n                        </button>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"input-group\\\" ng-controller=\\\"ngifctrl\\\">\\n                            <select class=\\\"form-control col-md-3\\\" id=\\\"opcion\\\" name=\\\"opcion\\\">\\n                                      <option value=\\\"nombre\\\">Nombre</option>\\n                                    </select>\\n                            <!-- (keyup)=\\\"buscarBus(buscarTexto.value)\\\" (keydown.enter)=\\\"buscarBus(buscarTexto.value)\\\" -->\\n                            <input (keyup)=\\\"buscarRuta(buscarTexto.value)\\\" (keydown.enter)=\\\"buscarRuta(buscarTexto.value)\\\" type=\\\"text\\\" id=\\\"texto\\\" name=\\\"texto\\\" class=\\\"form-control\\\" placeholder=\\\"Texto a buscar\\\" #buscarTexto>\\n                            <!-- (click)=\\\"buscarBus(buscarTexto.value)\\\" -->\\n                            <button (click)=\\\"buscarRuta(buscarTexto.value)\\\" type=\\\"button\\\" title=\\\"Buscar\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Buscar</button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <table class=\\\"table table-hover table-bordered table-striped table-sm table-responsive\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Nombre</th>\\n                            <th>Descripcion</th>\\n                            <th>Imagen Ruta</th>\\n                            <th># De Buses</th>\\n                            <th>Fecha</th>\\n                            <th>Tipo Bus</th>\\n                            <th>Operaciones</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n\\n                        <!-- <tr *ngFor=\\\"let bus of busService.buses\\\"> -->\\n                        <tr *ngFor=\\\"let ruta of selectedRutas1\\\">\\n\\n                            <td>{{ruta.nombre}}</td>\\n                            <td>{{ruta.descripcion}}</td>\\n                            <td width=\\\"20%\\\">\\n                                <!-- {{bus.imagenBus}} -->\\n                                <img src=\\\"{{ruta.imagenBus}}\\\" height=\\\"30%\\\">\\n                            </td>\\n                            <td>{{ruta.NumBusesAsociados}}</td>\\n                            <td>{{ruta.Fecha}}</td>\\n                            <!-- <td>{{bus.imagenTipoBus}}</td> -->\\n                            <td *ngIf=\\\"ruta.imagenTipoBus==='assets/img/padron.png'\\\">Padron</td>\\n                            <td *ngIf=\\\"ruta.imagenTipoBus==='assets/img/alimentador.png'\\\">Alimentador</td>\\n                            <td *ngIf=\\\"ruta.imagenTipoBus==='assets/img/articulado.png'\\\">Articulado</td>\\n                            <td>\\n                                <!-- <a (click)=\\\"editBus(bus)\\\">\\n                                    <i class=\\\"material-icons\\\">edit</i>\\n                                </a>\\n                                <a (click)=\\\"deleteBus(bus._id)\\\">\\n                                    <i class=\\\"material-icons\\\">delete</i>\\n                                </a> -->\\n                                &nbsp;\\n                                <button (click)=\\\"editRuta(ruta)\\\" type=\\\"button\\\" title=\\\"Editar Ruta\\\" class=\\\"btn btn-warning btn-sm \\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalActualizarRutas\\\">\\n                                        <i class=\\\"material-icons\\\">edit</i>\\n                                      </button> &nbsp;\\n                                <button (click)=\\\"editRuta(ruta)\\\" type=\\\"button\\\" title=\\\"Eliminar Ruta\\\" class=\\\"btn btn-danger btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalEliminarRutas\\\">\\n                                        <i class=\\\"material-icons\\\">delete</i>\\n                                      </button>\\n\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                <div class=\\\"row animated fadeIn fast\\\" *ngIf=\\\"selectedRutas1.length==0\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                            No existen resultados pata la busqueda.\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n\\n<!--Inicio del modal agregar/actualizar Rutas-->\\n<div class=\\\"modal fade\\\" id=\\\"modalActualizarRutas\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" style=\\\"display: none;\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-primary modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Agregar Ruta</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                      <span aria-hidden=\\\"true\\\">×</span>\\n                    </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n\\n                <form class=\\\"user\\\" #rutaForm=\\\"ngForm\\\" (ngSubmit)=\\\"addRuta(rutaForm)\\\">\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-md-9\\\">\\n                            <input type=\\\"hidden\\\" name=\\\"_id\\\" #_id=\\\"ngModel\\\" [(ngModel)]=\\\"rutaService.selectedRuta._id\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\">Nombre</label>\\n                        <div class=\\\"col-md-9\\\">\\n                            <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"nombre\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"rutaService.selectedRuta.nombre\\\" placeholder=\\\"Nombre\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\">Descripcion</label>\\n                        <div class=\\\"col-md-9\\\">\\n                            <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"descripcion\\\" #descripcion=\\\"ngModel\\\" [(ngModel)]=\\\"rutaService.selectedRuta.descripcion\\\" placeholder=\\\"Descripcion\\\">\\n                        </div>\\n                    </div>\\n                    <!-- <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\">ImagenRuta</label>\\n                        <div class=\\\"col-md-9\\\">\\n                            <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"imagenBus\\\" #imagenBus=\\\"ngModel\\\" [(ngModel)]=\\\"rutaService.selectedRuta.imagenBus\\\" placeholder=\\\"ImagenBus\\\">\\n                        </div>\\n                    </div> -->\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\">Fecha</label>\\n                        <div class=\\\"col-md-9\\\">\\n                            <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"Fecha\\\" #Fecha=\\\"ngModel\\\" [(ngModel)]=\\\"rutaService.selectedRuta.Fecha\\\" placeholder=\\\"Fecha\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\"></label>\\n                        <div class=\\\"col-md-9\\\">\\n                            <input type=\\\"hidden\\\" name=\\\"imagenBus\\\" #imagenBus=\\\"ngModel\\\" [(ngModel)]=\\\"rutaService.selectedRuta.imagenBus\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\">Imagen Bus</label>\\n                        <div class=\\\"col-md-9\\\">\\n                            <!-- <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"imagenTipoBus\\\" #imagenTipoBus=\\\"ngModel\\\" [(ngModel)]=\\\"busService.selectedBus.imagenTipoBus\\\" placeholder=\\\"ImagenTipoBus\\\"> -->\\n                            <input type=\\\"radio\\\" name=\\\"imagenTipoBus\\\" #imagenTipoBus=\\\"ngModel\\\" [(ngModel)]=\\\"rutaService.selectedRuta.imagenTipoBus\\\" value=\\\"assets/img/alimentador.png\\\" checked> <img src=\\\"assets/img/alimentador.png\\\" width=\\\"50%\\\" height=\\\"30%\\\">                            <br>\\n                            <input type=\\\"radio\\\" name=\\\"imagenTipoBus\\\" #imagenTipoBus=\\\"ngModel\\\" [(ngModel)]=\\\"rutaService.selectedRuta.imagenTipoBus\\\" value=\\\"assets/img/padron.png\\\"> <img src=\\\"assets/img/padron.png\\\" width=\\\"50%\\\" height=\\\"30%\\\"><br>\\n                            <input type=\\\"radio\\\" name=\\\"imagenTipoBus\\\" #imagenTipoBus=\\\"ngModel\\\" [(ngModel)]=\\\"rutaService.selectedRuta.imagenTipoBus\\\" value=\\\"assets/img/articulado.png\\\"> <img src=\\\"assets/img/articulado.png\\\" width=\\\"50%\\\" height=\\\"30%\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <!-- <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\"></label> -->\\n                        <div class=\\\"col-md-9\\\">\\n                            <input type=\\\"hidden\\\" name=\\\"NumBusesAsociados\\\" #NumBusesAsociados=\\\"ngModel\\\" [(ngModel)]=\\\"rutaService.selectedRuta.NumBusesAsociados\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\"></label>\\n                        <div class=\\\"col-md-9\\\">\\n                            <input type=\\\"hidden\\\" name=\\\"arrayBuses\\\" #arrayBuses=\\\"ngModel\\\" [(ngModel)]=\\\"rutaService.selectedRuta.arrayBuses\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cerrar</button>\\n                        <div class=\\\"card-action\\\">\\n                            <div class=\\\"input-field\\\">\\n                                <button class=\\\"btn btn-primary btn-user mce-btn-group\\\" style=\\\"margin-right: 7.5px;\\\" (click)=\\\"resetForm(rutaForm)\\\">\\n                                                        Limpiar</button>\\n                                <button class=\\\"btn btn-success btn-user mce-btn-group\\\" (click)=\\\"addRuta(rutaForm)\\\" data-dismiss=\\\"modal\\\">\\n                                                        Guardar</button>\\n                            </div>\\n\\n                        </div>\\n\\n                    </div>\\n\\n                </form>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n<!--Fin del modal agregar/actualizar Rutas--->\\n\\n<!-- Inicio del modal Eliminar Ruta -->\\n<div class=\\\"modal fade\\\" id=\\\"modalEliminarRutas\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" style=\\\"display: none;\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-danger\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Eliminar Ruta {{selectedRuta1.nombre}}</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                      <span aria-hidden=\\\"true\\\">×</span>\\n                    </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <p>Estas seguro de eliminar la Ruta?</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cerrar</button>\\n                <button (click)=\\\"deleteRuta(selectedRuta1._id)\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Eliminar</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- Fin del modal Eliminar Ruta -->\\n\\n<div class=\\\"container\\\" style=\\\"left: initial\\\">\\n    <!-- <div class=\\\"card o-hidden border-0 shadow-lg my-5\\\"> -->\\n    <!-- <div class=\\\"card-body\\\"> -->\\n    <!-- <div class=\\\"row\\\" style=\\\"align-content: initial\\\"> -->\\n\\n    <!-- <div class=\\\"col-lg-4\\\">\\n            <div class=\\\"p-5\\\">\\n                <div class=\\\"text-center\\\">\\n                    <h1 class=\\\"h4 text-gray-900 mb-4\\\">Agregar Ruta!</h1>\\n                </div>\\n                <br>\\n\\n                <form class=\\\"user\\\" #busForm=\\\"ngForm\\\" (ngSubmit)=\\\"addBus(busForm)\\\">\\n\\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"hidden\\\" name=\\\"_id\\\" #_id=\\\"ngModel\\\" [(ngModel)]=\\\"busService.selectedBus._id\\\">\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"nombre\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"busService.selectedBus.nombre\\\" placeholder=\\\"Nombre\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"descripcion\\\" #descripcion=\\\"ngModel\\\" [(ngModel)]=\\\"busService.selectedBus.descripcion\\\" placeholder=\\\"descripcion\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"imagenBus\\\" #imagenBus=\\\"ngModel\\\" [(ngModel)]=\\\"busService.selectedBus.imagenBus\\\" placeholder=\\\"imagenBus\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"Fecha\\\" #Fecha=\\\"ngModel\\\" [(ngModel)]=\\\"busService.selectedBus.Fecha\\\" placeholder=\\\"Fecha\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"imagenTipoBus\\\" #imagenTipoBus=\\\"ngModel\\\" [(ngModel)]=\\\"busService.selectedBus.imagenTipoBus\\\" placeholder=\\\"imagenTipoBus\\\">\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"hidden\\\" name=\\\"NumBusesAsociados\\\" #NumBusesAsociados=\\\"ngModel\\\" [(ngModel)]=\\\"busService.selectedBus.NumBusesAsociados\\\">\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"hidden\\\" name=\\\"arrayBuses\\\" #arrayBuses=\\\"ngModel\\\" [(ngModel)]=\\\"busService.selectedBus.arrayBuses\\\">\\n                    </div>\\n\\n                    <div class=\\\"card-action\\\">\\n                        <div class=\\\"input-field\\\">\\n                            <button class=\\\"btn btn-primary btn-user mce-btn-group\\\" style=\\\"margin-right: 20px;\\\" (click)=\\\"resetForm(busForm)\\\">\\n                                        Limpiar</button>\\n                            <button class=\\\"btn btn-success btn-user mce-btn-group\\\">\\n                                        Guardar</button>\\n                        </div>\\n\\n                    </div>\\n                </form>\\n            </div>\\n        </div> -->\\n\\n    <!-- <div class=\\\"col-lg-8\\\">\\n            <div class=\\\"p-5\\\">\\n                <div class=\\\"text-center\\\">\\n                    <h1 class=\\\"h4 text-gray-900 mb-4\\\">Rutas!</h1>\\n                </div>\\n                <br>\\n                <table class=\\\"w3-table-all\\\">\\n                    <thead>\\n                        <tr class=\\\"w3-light-grey w3-hover-red\\\">\\n                            <th>Nombre</th>\\n                            <th>descripcion</th>\\n                            <th>imagenBus</th>\\n                            <th>Fecha</th>\\n                            <th>imagenTipoBus</th>\\n                            <th>Operaciones</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr class=\\\"w3-hover-gray\\\" *ngFor=\\\"let bus of busService.buses\\\">\\n\\n                            <td>{{bus.nombre}}</td>\\n                            <td>{{bus.descripcion}}</td>\\n                            <td>{{bus.imagenBus}}</td>\\n                            <td>{{bus.Fecha}}</td>\\n                            <td>{{bus.imagenTipoBus}}</td>\\n                            <td>\\n                                <a (click)=\\\"editBus(bus)\\\">\\n                                    <i class=\\\"material-icons\\\">edit</i>\\n                                </a>\\n                                <a (click)=\\\"deleteBus(bus._id)\\\">\\n                                    <i class=\\\"material-icons\\\">delete</i>\\n                                </a>\\n                            </td>\\n\\n                        </tr>\\n                    </tbody>\\n                </table>\\n\\n            </div>\\n        </div>\\n    </div> -->\\n    <!-- // *********************************************************************************************** ************************* -->\\n\\n    <!-- </div> -->\\n</div>\\n\\n<div class=\\\"row\\\" style=\\\"align-content: initial\\\">\\n\\n    <div class=\\\"col-lg-12 my-5\\\">\\n\\n\\n        <!-- Tabla Listado Buses -->\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <i class=\\\"fa fa-address-book\\\"></i> Buses\\n                <button (click)=\\\"resetForm1(busForm)\\\" type=\\\"button\\\" title=\\\"Crear Bus\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalActualizarBus\\\">\\n                            <i class=\\\"material-icons\\\">add_to_photos</i>&nbsp;Nuevo Bus&nbsp;\\n                        </button>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"input-group\\\" ng-controller=\\\"ngifctrl\\\">\\n                            <select class=\\\"form-control col-md-3\\\" id=\\\"opcion\\\" name=\\\"opcion\\\">\\n                                      <option value=\\\"placa\\\">Placa</option>\\n                                    </select>\\n                            <!-- (keyup)=\\\"buscarBus(buscarTexto.value)\\\" (keydown.enter)=\\\"buscarBus(buscarTexto.value)\\\" -->\\n                            <input (keyup)=\\\"buscarBus(buscarTexto1.value)\\\" (keydown.enter)=\\\"buscarBus(buscarTexto1.value)\\\" type=\\\"text\\\" id=\\\"texto1\\\" name=\\\"texto1\\\" class=\\\"form-control\\\" placeholder=\\\"Texto a buscar\\\" #buscarTexto1>\\n                            <!-- (click)=\\\"buscarBus(buscarTexto.value)\\\" -->\\n                            <button (click)=\\\"buscarBus(buscarTexto1.value)\\\" type=\\\"button\\\" title=\\\"Buscar\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Buscar</button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <table class=\\\"table table-hover table-bordered table-striped table-sm table-responsive\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Placa</th>\\n                            <th>Tipo Bus</th>\\n                            <th>Ruta Asociada</th>\\n                            <th>Conductor Asociado</th>\\n                            <th>Coordenadas</th>\\n                            <th>Operaciones</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n\\n                        <!-- <tr *ngFor=\\\"let bus of conductorService.conductores\\\"> -->\\n                        <tr *ngFor=\\\"let bus of selectedBuses1\\\">\\n\\n                            <td>{{bus.placa}}</td>\\n                            <!-- <td>{{bus.tipoBus}}</td> -->\\n                            <td *ngIf=\\\"bus.tipoBus==='assets/img/padron.png'\\\">Padron</td>\\n                            <td *ngIf=\\\"bus.tipoBus==='assets/img/alimentador.png'\\\">Alimentador</td>\\n                            <td *ngIf=\\\"bus.tipoBus==='assets/img/articulado.png'\\\">Articulado</td>\\n\\n                            <td>{{bus.RutaAsociada.nombre}}</td>\\n                            <td>{{bus.ConductorAsociado.nombre}}</td>\\n                            <!-- <td><img src=\\\"{{conductor.RutaAsociada.imagenBus}}\\\" width=\\\"30%\\\" height=\\\"30%\\\"></td> -->\\n                            <td> {{bus.latitud}}, {{bus.longitud}}, {{bus.sentido}}</td>\\n                            <!-- <td> {{conductor.RutaAsociada.nombre}}, {{conductor.RutaAsociada.NumBusesAsociados}}</td> -->\\n                            <td>\\n                                <!-- <a (click)=\\\"editBus(conductor)\\\">\\n                                    <i class=\\\"material-icons\\\">edit</i>\\n                                </a>\\n                                <a (click)=\\\"deleteBus(conductor._id)\\\">\\n                                    <i class=\\\"material-icons\\\">delete</i>\\n                                </a> -->\\n                                &nbsp;\\n                                <button (click)=\\\"editBus(bus); getRutasByTipoBus(bus.tipoBus); resetForm2(asignarRutaBusForm);\\\" type=\\\"button\\\" title=\\\"Asignar Ruta\\\" class=\\\"btn btn-success btn-sm mce-btn-group\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalAsignarRutaBus\\\">\\n                                    <i class=\\\"material-icons\\\">directions_bus</i>\\n                                </button>&nbsp;\\n                                <button (click)=\\\"editBus(bus); resetForm3(asignarconductorBusForm);\\\" type=\\\"button\\\" title=\\\"Asignar Conductor\\\" class=\\\"btn btn-success btn-sm mce-btn-group\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalAsignarConductorBus\\\">\\n                                    <i class=\\\"material-icons\\\">assignment_ind</i>\\n                                </button>&nbsp;\\n                                <button (click)=\\\"editBus(bus)\\\" type=\\\"button\\\" title=\\\"Editar Bus\\\" class=\\\"btn btn-warning btn-sm mce-btn-group\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalActualizarBus\\\">\\n                                    <i class=\\\"material-icons\\\">edit</i>\\n                                </button> &nbsp;\\n                                <button (click)=\\\"editBus(bus)\\\" type=\\\"button\\\" title=\\\"Eliminar Bus\\\" class=\\\"btn btn-danger btn-sm mce-btn-group\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalEliminarBus\\\">\\n                                    <i class=\\\"material-icons\\\">delete</i>\\n                                </button> &nbsp;\\n                                <button (click)=\\\"editBus(bus); CuadroDialogo1()\\\" type=\\\"button\\\" title=\\\"Info Bus\\\" class=\\\"btn btn-dark btn-sm mce-btn-group\\\">\\n                                    <i class=\\\"material-icons\\\">info</i>\\n                                </button>\\n\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n\\n                <div class=\\\"row animated fadeIn fast\\\" *ngIf=\\\"selectedBuses1.length==0\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                            No existen resultados pata la busqueda.\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n<!-- Fin tabla listado Buses -->\\n\\n<!--Inicio del modal agregar/actualizar Bus-->\\n<div class=\\\"modal fade\\\" id=\\\"modalActualizarBus\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" style=\\\"display: none;\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-primary modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Agregar Bus</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                      <span aria-hidden=\\\"true\\\">×</span>\\n                    </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n\\n                <form class=\\\"user\\\" #busForm=\\\"ngForm\\\" (ngSubmit)=\\\"addBus(busForm)\\\">\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-md-9\\\">\\n                            <input type=\\\"hidden\\\" name=\\\"_id\\\" #_id=\\\"ngModel\\\" [(ngModel)]=\\\"busesService.selectedBus._id\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\">Placa</label>\\n                        <div class=\\\"col-md-9\\\">\\n                            <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"placa\\\" #placa=\\\"ngModel\\\" [(ngModel)]=\\\"busesService.selectedBus.placa\\\" placeholder=\\\"Placa\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\">Tipo Bus</label>\\n                        <div class=\\\"col-md-9\\\">\\n                            <!-- <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"imagenTipoBus\\\" #imagenTipoBus=\\\"ngModel\\\" [(ngModel)]=\\\"busService.selectedBus.imagenTipoBus\\\" placeholder=\\\"ImagenTipoBus\\\"> -->\\n                            <input type=\\\"radio\\\" name=\\\"tipoBus\\\" #tipoBus=\\\"ngModel\\\" [(ngModel)]=\\\"busesService.selectedBus.tipoBus\\\" value=\\\"assets/img/alimentador.png\\\" checked> <img src=\\\"assets/img/alimentador.png\\\" width=\\\"50%\\\" height=\\\"30%\\\"> <br>\\n                            <input type=\\\"radio\\\" name=\\\"tipoBus\\\" #tipoBus=\\\"ngModel\\\" [(ngModel)]=\\\"busesService.selectedBus.tipoBus\\\" value=\\\"assets/img/padron.png\\\"> <img src=\\\"assets/img/padron.png\\\" width=\\\"50%\\\" height=\\\"30%\\\"><br>\\n                            <input type=\\\"radio\\\" name=\\\"tipoBus\\\" #tipoBus=\\\"ngModel\\\" [(ngModel)]=\\\"busesService.selectedBus.tipoBus\\\" value=\\\"assets/img/articulado.png\\\"> <img src=\\\"assets/img/articulado.png\\\" width=\\\"50%\\\" height=\\\"30%\\\">\\n                        </div>\\n                    </div>\\n                    <!-- <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\">Tipo Bus</label>\\n                        <div class=\\\"col-md-9\\\">\\n                            <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"tipoBus\\\" #tipoBus=\\\"ngModel\\\" [(ngModel)]=\\\"busesService.selectedBus.tipoBus\\\" placeholder=\\\"tipoBus\\\">\\n                        </div>\\n                    </div> -->\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-md-9\\\">\\n                            <!-- <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"RutaAsociada\\\" #RutaAsociada=\\\"ngModel\\\" [(ngModel)]=\\\"conductorService.selectedConductor.RutaAsociada\\\" placeholder=\\\"RutaAsociada\\\"> -->\\n                            <input type=\\\"hidden\\\" name=\\\"RutaAsociada\\\" #RutaAsociada=\\\"ngModel\\\" [(ngModel)]=\\\"busesService.selectedBus.RutaAsociada\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-md-9\\\">\\n                            <!-- <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"RutaAsociada\\\" #RutaAsociada=\\\"ngModel\\\" [(ngModel)]=\\\"conductorService.selectedConductor.RutaAsociada\\\" placeholder=\\\"RutaAsociada\\\"> -->\\n                            <input type=\\\"hidden\\\" name=\\\"ConductorAsociado\\\" #ConductorAsociado=\\\"ngModel\\\" [(ngModel)]=\\\"busesService.selectedBus.ConductorAsociado\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-md-9\\\">\\n                            <input type=\\\"hidden\\\" value=0 name=\\\"longitud\\\" #longitud=\\\"ngModel\\\" [(ngModel)]=\\\"busesService.selectedBus.longitud\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-md-9\\\">\\n                            <input type=\\\"hidden\\\" name=\\\"latitud\\\" #latitud=\\\"ngModel\\\" [(ngModel)]=\\\"busesService.selectedBus.latitud\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\"></label>\\n                        <div class=\\\"col-md-9\\\">\\n                            <input type=\\\"hidden\\\" name=\\\"sentido\\\" #sentido=\\\"ngModel\\\" [(ngModel)]=\\\"busesService.selectedBus.sentido\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"modal-footer\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cerrar</button>\\n                        <div class=\\\"card-action\\\">\\n                            <div class=\\\"input-field\\\">\\n                                <button class=\\\"btn btn-primary btn-user mce-btn-group\\\" style=\\\"margin-right: 7.5px;\\\" (click)=\\\"resetForm1(busForm)\\\">\\n                                                        Limpiar</button>\\n                                <button class=\\\"btn btn-success btn-user mce-btn-group\\\" (click)=\\\"addBus(busForm)\\\" data-dismiss=\\\"modal\\\">\\n                                                        Guardar</button>\\n                            </div>\\n\\n                        </div>\\n\\n                    </div>\\n\\n                </form>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n<!--Fin del modal agg/act Bus-->\\n\\n\\n<!-- Inicio del modal Eliminar Bus -->\\n<div class=\\\"modal fade\\\" id=\\\"modalEliminarBus\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" style=\\\"display: none;\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-danger\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Eliminar el Bus con Placa: {{selectedBus1.placa}}</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                      <span aria-hidden=\\\"true\\\">×</span>\\n                    </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <p>Estas seguro de eliminar el Bus?</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cerrar</button>\\n                <button (click)=\\\"deleteBus(selectedBus1._id)\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Eliminar</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- Fin del modal Eliminar Bus -->\\n\\n<!-- Inicio del modal Asignar Ruta a Bus -->\\n<div class=\\\"modal fade\\\" id=\\\"modalAsignarRutaBus\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" style=\\\"display: none;\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-danger\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Asignar una Ruta para el Bus: <b>{{selectedBus1.placa}}</b>.</h4>\\n                <h4 class=\\\"modal-title\\\">Ruta Actual: <b>{{selectedBus1.RutaAsociada.nombre}} </b>.</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                      <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <p>Seleccione la ruta que va ser asignada. </p>\\n\\n                <form class=\\\"user\\\" #asignarRutaBusForm=\\\"ngForm\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <!-- <div class=\\\"col-1\\\"></div>\\n                    <div class=\\\"col-11\\\"> -->\\n                        <select class=\\\"modal-body\\\" name=\\\"ruta\\\" ngModel> \\n                            <option value=\\\"\\\" selected disabled>Seleccione una ruta</option>\\n                            <option value=\\\"\\\">Quitar Ruta </option>\\n                            <!-- <option *ngFor=\\\"let ruta of selectedRutas1\\\" [ngValue]=\\\"ruta\\\" >{{ruta.nombre}}</option> -->\\n                            <option *ngFor=\\\"let ruta of selectedRutas2\\\" [ngValue]=\\\"ruta\\\" >{{ruta.nombre}}</option>\\n                        </select>\\n                    </div>\\n\\n                    <!-- </div> -->\\n                </form>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cerrar</button>\\n                <button (click)=\\\"asignarRutaBus(asignarRutaBusForm)\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\"><i class=\\\"material-icons\\\">save</i> Guardar</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- Fin del modal Asignar Ruta a Bus -->\\n\\n<!-- Inicio del modal Asignar Conductor a Bus -->\\n<div class=\\\"modal fade\\\" id=\\\"modalAsignarConductorBus\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" style=\\\"display: none;\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-danger\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Asignar un Conductor para el Bus: <b>{{selectedBus1.placa}}</b>.</h4>\\n                <!-- // **ngIf=\\\"selectedBus1.ConductorAsociado != ''\\\"  -->\\n                <h4 class=\\\"modal-title\\\">Conductor Actual: <b>{{selectedBus1.ConductorAsociado.nombre}} </b>.</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                      <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <p>Seleccione el Conductor que va ser asignado. </p>\\n\\n                <form class=\\\"user\\\" #asignarconductorBusForm=\\\"ngForm\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <select class=\\\"modal-body\\\" name=\\\"conductor\\\" ngModel> \\n                            <option value=\\\"\\\" disabled selected>Seleccione un Conductor</option>\\n                            <option value=\\\"\\\">Quitar Conductor : </option>\\n                            <option *ngFor=\\\"let conductor of conductoresSinBus\\\" [ngValue]=\\\"conductor\\\" >{{conductor.nombre}}</option>\\n                        </select>\\n                    </div>\\n                </form>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cerrar</button>\\n                <button (click)=\\\"asignarConductorBus(asignarconductorBusForm)\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\"><i class=\\\"material-icons\\\">save</i> Guardar</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- Fin del modal Asignar Conductor a Bus -->\\n\\n<!-- // *********************************************************************************************** ************************* -->\\n<!-- // *********************************************************************************************** ************************* -->\\n<!-- // *********************************************************************************************** ************************* -->\\n<!-- // *********************************************************************************************** ************************* -->\\n<!-- // *********************************************************************************************** ************************* -->\\n\\n<!-- Tabla Listado Conductores UserI -->\\n<div class=\\\"row\\\" style=\\\"align-content: initial\\\">\\n\\n    <div class=\\\"col-lg-12 my-5\\\">\\n\\n        <!-- Tabla Listado Conductores -->\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <i class=\\\"fa fa-address-book\\\"></i> Conductores\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"input-group\\\" ng-controller=\\\"ngifctrl\\\">\\n                            <select class=\\\"form-control col-md-3\\\" id=\\\"opcion\\\" name=\\\"opcion\\\">\\n                                      <option value=\\\"nombre\\\">Nombre</option>\\n                                    </select>\\n                            <!-- (keyup)=\\\"buscarBus(buscarTexto.value)\\\" (keydown.enter)=\\\"buscarBus(buscarTexto.value)\\\" -->\\n                            <input (keyup)=\\\"buscarConductor(buscarTexto2.value)\\\" (keydown.enter)=\\\"buscarConductor(buscarTexto2.value)\\\" type=\\\"text\\\" id=\\\"texto2\\\" name=\\\"texto2\\\" class=\\\"form-control\\\" placeholder=\\\"Texto a buscar\\\" #buscarTexto2>\\n                            <!-- (click)=\\\"buscarBus(buscarTexto.value)\\\" -->\\n                            <button (click)=\\\"buscarConductor(buscarTexto2.value)\\\" type=\\\"button\\\" title=\\\"Buscar\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Buscar</button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <table class=\\\"table table-hover table-bordered table-striped table-sm table-responsive\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Nombre</th>\\n                            <th>Email</th>\\n                            <th>Contrasena</th>\\n                            <th>Tipo</th>\\n                            <th>Activo</th>\\n                            <th>Operaciones</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n\\n                        <!-- <tr *ngFor=\\\"let bus of conductorService.conductores\\\"> -->\\n                        <tr *ngFor=\\\"let conductor of selectedConductores1\\\">\\n\\n                            <td>{{conductor.nombre}}</td>\\n                            <td>{{conductor.email}}</td>\\n                            <td>{{conductor.contrasena}}</td>\\n                            <td>{{conductor.tipoUsuario}}</td>\\n                            <td>{{conductor.estado}}</td>\\n                            <td>\\n                                <button (click)=\\\"editConductor(conductor)\\\" type=\\\"button\\\" title=\\\"Editar Conductor\\\" class=\\\"btn btn-warning btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalActualizarConductor\\\">\\n                                    <i class=\\\"material-icons\\\">edit</i>\\n                                </button> &nbsp;\\n                                <button (click)=\\\"editConductor(conductor)\\\" type=\\\"button\\\" title=\\\"Eliminar Conductor\\\" class=\\\"btn btn-danger btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalEliminarConductor\\\">\\n                                    <i class=\\\"material-icons\\\">delete</i>\\n                                </button>\\n\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n\\n                <div class=\\\"row animated fadeIn fast\\\" *ngIf=\\\"selectedConductores1.length==0\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                            No existen resultados pata la busqueda.\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n<!-- Fin tabla listado Conductores UserI -->\\n\\n<!--Inicio del modal actualizar Conductor UserI-->\\n<div class=\\\"modal fade\\\" id=\\\"modalActualizarConductor\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" style=\\\"display: none;\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-primary modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Editar Conductor</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                      <span aria-hidden=\\\"true\\\">×</span>\\n                    </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n\\n                <form class=\\\"user\\\" #conductorForm=\\\"ngForm\\\" (ngSubmit)=\\\"addConductor(conductorForm)\\\">\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-md-9\\\">\\n                            <input type=\\\"hidden\\\" name=\\\"_id\\\" #_id=\\\"ngModel\\\" [(ngModel)]=\\\"selectedConductor1._id\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\">Nombre</label>\\n                        <div class=\\\"col-md-9\\\">\\n                            <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"nombre\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"selectedConductor1.nombre\\\" placeholder=\\\"nombre\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\">Email</label>\\n                        <div class=\\\"col-md-9\\\">\\n                            <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"selectedConductor1.email\\\" placeholder=\\\"email\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-md-3 form-control-label\\\" for=\\\"text-input\\\">Contrasena</label>\\n                        <div class=\\\"col-md-9\\\">\\n                            <input class=\\\"form-control form-control-user\\\" type=\\\"text\\\" name=\\\"contrasena\\\" #contrasena=\\\"ngModel\\\" [(ngModel)]=\\\"selectedConductor1.contrasena\\\" placeholder=\\\"contrasena\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-md-9\\\">\\n                            <input type=\\\"hidden\\\" name=\\\"tipoUsuario\\\" #tipoUsuario=\\\"ngModel\\\" [(ngModel)]=\\\"selectedConductor1.tipoUsuario\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-md-9\\\">\\n                            <input type=\\\"hidden\\\" name=\\\"estado\\\" #estado=\\\"ngModel\\\" [(ngModel)]=\\\"selectedConductor1.estado\\\">\\n                        </div>\\n                    </div>\\n\\n\\n                    <div class=\\\"modal-footer\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cerrar</button>\\n                        <div class=\\\"card-action\\\">\\n                            <div class=\\\"input-field\\\">\\n                                <button class=\\\"btn btn-primary btn-user mce-btn-group\\\" style=\\\"margin-right: 7.5px;\\\" (click)=\\\"resetForm3(conductorForm)\\\">\\n                                                        Limpiar</button>\\n                                <button class=\\\"btn btn-success btn-user mce-btn-group\\\" (click)=\\\"addConductor(conductorForm)\\\" data-dismiss=\\\"modal\\\">\\n                                                        Guardar</button>\\n                            </div>\\n\\n                        </div>\\n\\n                    </div>\\n\\n                </form>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n<!--Fin del modal agg/act Conductor UserI-->\\n\\n<!-- Inicio del modal Eliminar Conductor UserI -->\\n<div class=\\\"modal fade\\\" id=\\\"modalEliminarConductor\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" style=\\\"display: none;\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-danger\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Eliminar el Conductor: {{selectedConductor1.nombre}}</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                      <span aria-hidden=\\\"true\\\">×</span>\\n                    </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <p>Estas seguro de eliminar el Conductor?</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cerrar</button>\\n                <button (click)=\\\"deleteConductor(selectedConductor1._id)\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Eliminar</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- Fin del modal Eliminar Conductor UserI -->\"","export default \"<div class=\\\"jumbotron jumbotron-fluid animated fadeIn \\\">\\n    <div class=\\\"container\\\">\\n        <h1 class=\\\"display-4\\\">Metrolinea App</h1>\\n        <mat-toolbar color=\\\"primary\\\">\\n            <span>Mapa</span>\\n        </mat-toolbar>\\n\\n        <p class=\\\"lead\\\">Esta es la aplicacion para rastrear buses de metrolinea</p>\\n    </div>\\n    <img src='assets/img/mami.jpg' alt=\\\"123\\\" class=\\\"img-fluid\\\">\\n    <!-- <div #map style=\\\"width:100%;height:400px\\\"></div> -->\\n    <!-- <app-mapa></app-mapa> -->\\n</div>\\n\\n\\n<div class=\\\"main-container\\\">\\n    <!-- <h3>Raised Buttons</h3>\\n    <div class=\\\"example-button-row\\\">\\n        <button mat-raised-button>Basic</button>\\n        <button mat-raised-button color=\\\"primary\\\">Primary</button>\\n        <button mat-raised-button color=\\\"accent\\\">Accent</button>\\n        <button mat-raised-button color=\\\"warn\\\">Warn</button>\\n        <button mat-raised-button disabled>Disabled</button>\\n        <a mat-raised-button routerLink=\\\".\\\">Link</a>\\n    </div>\\n\\n    <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar> -->\\n\\n</div>\"","export default \"<!-- <form [formGroup]=\\\"forma\\\">\\n    <mat-form-field>\\n        <input matInput placeholder=\\\"Nombre\\\" formControlName=\\\"placa\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n        <textarea rows=\\\"3\\\" matInput placeholder=\\\"Ruta\\\" formControlName=\\\"ruta\\\"></textarea>\\n    </mat-form-field>\\n\\n    <div>\\n        <button (click)=\\\"guardarCambios()\\\" mat-raised-button color=\\\"primary\\\">Guardar</button>\\n        <button type=\\\"button\\\" (click)=\\\"onNoClick()\\\" mat-raised-button color=\\\"warn\\\">Cancelar</button>\\n    </div>\\n</form> -->\\n\\n<div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n            <strong>Ruta Bus: </strong> <b>{{data.ruta.nombre}}</b>, <strong>Placa Bus: </strong> <b>{{data.placa}}</b>\\n        </div>\\n        <div class=\\\"col-md-8\\\">\\n            Paradas: {{data.ruta.descripcion}}\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n            <button type=\\\"button\\\" (click)=\\\"onNoClick()\\\" mat-raised-button color=\\\"warn\\\">Cerrar</button>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n        </div>\\n    </div>\\n</div>\"","export default \"<mat-card>\\n\\n    <mat-card-title>\\n        Mapa\\n    </mat-card-title>\\n\\n    <!-- (centerChange)= (zoomChange) -->\\n\\n    <mat-card-content>\\n        <agm-map (mapClick)=\\\"agregarMarcador( $event )\\\" (boundsChange)=\\\"moverMapa( $event);\\\" [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"16\\\">\\n            <!-- <agm-circle [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [radius]=\\\"30\\\" [fillColor]=\\\"'red'\\\" [circleDraggable]=\\\"true\\\" [editable]=\\\"true\\\">></agm-circle> -->\\n            <agm-marker *ngFor=\\\"let marcador of marcadores; let i = index\\\" [iconUrl]=\\\"'assets/carro.bmp'\\\" [label]=\\\"marcador.placa\\\" [latitude]=\\\"marcador.latitud\\\" [longitude]=\\\"marcador.longitud\\\">\\n\\n                <agm-info-window>\\n                    <strong>{{marcador.placa}}</strong>\\n                    <p>\\n                        {{marcador.ruta}}\\n                    </p>\\n                    <div>\\n                        <button (click)=\\\"editarMarcador(marcador)\\\" mat-raised-button color=\\\"primary\\\">Editar</button>\\n                        <button (click)=\\\"borrarMarcador(i)\\\" mat-raised-button color=\\\"warn\\\">Borrar</button>\\n                    </div>\\n                </agm-info-window>\\n\\n            </agm-marker>\\n        </agm-map>\\n    </mat-card-content>\\n\\n</mat-card>\"","export default \"<!-- <div id=\\\"map\\\"></div>\\nReplace the value of the key parameter with your own API key.\\n<script async defer src=\\\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCkUOdZ5y7hMm0yrcCQoCvLwzdM6M8s5qk&callback=initMap\\\">\\n    navigator.geolocation.getCurrentPosition(\\n        function(datos) {\\n            console.log(\\\"lat: \\\" + datos.coords.latitude);\\n        }\\n    )\\n</script> -->\\n\\n<div #map style=\\\"width:100%;height:400px\\\"></div>\"","export default \"<h1>Buscando: <small>{{termino}}</small></h1>\\n\\n<div *ngIf='termino==\\\"\\\"' (keyup)=\\\"irRutas()\\\">\\n\\n</div>\\n\\n<div class=\\\"row animated fadeIn fast\\\" *ngIf=\\\"rutasSearch.length==0\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n            No existen resultados con el termino: {{termino}}\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"card-columns\\\">\\n    <app-tarjeta-bus [termino]=\\\"ruta.nombre\\\" [ruta]=\\\"ruta\\\" *ngFor=\\\"let ruta of rutasSearch ;\\\"></app-tarjeta-bus>\\n</div>\"","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n\\n    <div class=\\\"col-1\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n            <img src=\\\"assets/img/A-64.png\\\" width=\\\"130%\\\" height=\\\"130%\\\" alt=\\\"\\\">\\n        </a>\\n    </div>\\n\\n\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo02\\\" aria-controls=\\\"navbarTogglerDemo02\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo02\\\">\\n\\n        <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n            <li class=\\\"nav-item \\\" routerLinkActive=\\\"active\\\" id=\\\"ocultar6\\\">\\n                <!-- <a class=\\\"nav-link\\\">{{UsuarioActivo.tipoUsuario}} : {{ UsuarioActivo.nombre }}   .</a> -->\\n                <a *ngIf=\\\"auth.getUserLogueado().tipoUsuario != '' \\\" class=\\\"nav-link\\\">{{auth.getUserLogueado().tipoUsuario}} : {{ auth.getUserLogueado().nombre }}   </a>\\n            </li>\\n        </ul>\\n\\n        <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                <a class=\\\"nav-link \\\" [routerLink]=\\\"[ 'home'] \\\"><i class=\\\"material-icons\\\">home</i>Inicio </a>\\n            </li>\\n            <li class=\\\"nav-item \\\" routerLinkActive=\\\"active\\\">\\n                <a class=\\\"nav-link \\\" [routerLink]=\\\"[ 'buses'] \\\"><i class=\\\"material-icons\\\">commute</i>Rutas</a>\\n            </li>\\n            <li class=\\\"nav-item \\\" routerLinkActive=\\\"active\\\" id=\\\"ocultar1\\\">\\n                <a class=\\\"nav-link \\\" [routerLink]=\\\"[ 'about'] \\\"><i class=\\\"material-icons\\\">build</i>Administrador</a>\\n            </li>\\n            <li class=\\\"nav-item \\\" routerLinkActive=\\\"active\\\" id=\\\"ocultar2\\\">\\n                <a class=\\\"nav-link \\\" [routerLink]=\\\"[ 'registrar'] \\\"><i class=\\\"material-icons\\\">supervised_user_circle</i>Registrar</a>\\n            </li>\\n            <li class=\\\"nav-item \\\" routerLinkActive=\\\"active\\\" id=\\\"ocultar4\\\">\\n                <a class=\\\"nav-link \\\" [routerLink]=\\\"[ 'login'] \\\"><i class=\\\"material-icons\\\">account_box</i>Inicio Sesion</a>\\n            </li>\\n            <li class=\\\"nav-item \\\" routerLinkActive=\\\"active\\\" id=\\\"ocultar5\\\">\\n                <a class=\\\"nav-link \\\" [routerLink]=\\\"[ 'conductor'] \\\"><i class=\\\"material-icons\\\">directions_bus</i>Conductor</a>\\n            </li>\\n\\n        </ul>\\n\\n\\n        <form class=\\\"form-inline my-2 my-lg-0 \\\">\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Buscar Ruta\\\" (keyup)=\\\"buscarBus(buscarTexto.value)\\\" (keydown.enter)=\\\"buscarBus(buscarTexto.value)\\\" #buscarTexto>\\n            <button (click)=\\\"buscarBus(buscarTexto.value)\\\" class=\\\"btn btn-outline-success my-2 my-sm-0 \\\" type=\\\"button\\\">Buscar</button>\\n        </form>\\n        <li>\\n            <button id=\\\"ocultar3\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"salir()\\\">Salir</button>\\n        </li>\\n    </div>\\n</nav>\"","export default \"<div class=\\\"card animated fadeIn fast\\\">\\n    <img [src]=\\\"ruta.imagenBus\\\" class=\\\"card-img-top\\\" [alt]=\\\"ruta.nombre\\\">\\n    <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{ ruta.nombre }}</h5>\\n        <p class=\\\"card-text\\\">{{ ruta.descripcion }}</p>\\n        <p class=\\\"card-text\\\"><small class=\\\"text-muted\\\">{{ ruta.Fecha }}</small></p>\\n    </div>\\n\\n    <button (click)=\\\"verRuta()\\\" type=\\\"button\\\" class=\\\"btn btn-outline-success btn-block\\\">Ver más...</button>\\n\\n    <!-- <a [routerLink]=\\\"['/bus',i]\\\" class=\\\"btn btn-outline-success\\\">Ver mas link..</a> -->\\n\\n\\n</div>\"","export default \"<body>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-9 col-md-7 col-lg-5 mx-auto\\\">\\n                <div class=\\\"card card-signin my-5\\\">\\n\\n                    <div class=\\\"alert-danger\\\" id=\\\"errorEmail\\\" style=\\\"margin-bottom:5px; display: none;\\\" role=\\\"alert\\\">\\n                        <div class=\\\"container-error-message\\\">\\n                            Email y/o Contrasena <b>Incorrecta</b>!\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"card-body\\\">\\n                        <h5 class=\\\"card-title text-center\\\">Inicio de Sesion</h5>\\n                        <form #frmLogin=\\\"ngForm\\\" class=\\\"form-signin\\\" (ngSubmit)=\\\"onLogin(frmLogin)\\\">\\n                            <div class=\\\"form-label-group\\\">\\n                                <input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Correo Electronico\\\" ngModel required minlength=5 pattern=\\\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\" autofocus>\\n                                <label for=\\\"inputEmail\\\">Correo Electronico</label>\\n                            </div>\\n\\n                            <div *ngIf=\\\"!frmLogin.valid\\\">\\n                                <div class=\\\"alert-danger\\\" *ngIf=\\\"this.frmLogin.controls.email.invalid && (this.frmLogin.controls.email.dirty || this.frmLogin.controls.email.touched)\\\" style=\\\"margin-bottom:5px\\\" role=\\\"alert\\\">\\n                                    <div class=\\\"container-error-message\\\">\\n                                        Ingrese un email <b>valido</b>!\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-label-group\\\">\\n                                <input type=\\\"password\\\" name=\\\"contrasena\\\" id=\\\"contrasena\\\" class=\\\"form-control\\\" placeholder=\\\"Contraseña\\\" ngModel required>\\n                                <label for=\\\"inputPassword\\\">Contraseña</label>\\n                            </div>\\n                            <div *ngIf=\\\"!frmLogin.valid\\\">\\n                                <div class=\\\"alert-danger\\\" *ngIf=\\\"frmLogin.controls.contrasena.invalid && (frmLogin.controls.contrasena.dirty || frmLogin.controls.contrasena.touched)\\\" style=\\\"margin-bottom:5px\\\" role=\\\"alert\\\">\\n                                    <div class=\\\"container-error-message\\\">\\n                                        Ingresar <b>Contraseña</b>!\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <button class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Ingresar\\\" type=\\\"submit\\\" value=\\\"Send\\\">Ingresar</button>\\n                            <hr class=\\\"my-4\\\">\\n\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</body>\"","export default \"<body>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-9 col-md-7 col-lg-5 mx-auto\\\">\\n                <div class=\\\"card card-signin my-5\\\">\\n                    <div class=\\\"alert-success\\\" id=\\\"UsuarioAgg\\\" style=\\\"margin-bottom:5px; display: none;\\\" role=\\\"alert\\\">\\n                        <div class=\\\"container-error-message\\\">\\n                            Usuario Registrado <b>Correctamente</b>!\\n                        </div>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n\\n                        <h5 class=\\\"card-title text-center\\\">Crear un Usuario</h5>\\n\\n                        <form #frmRegister=\\\"ngForm\\\" class=\\\"form-signin\\\" (ngSubmit)=\\\"onRegister(frmRegister)\\\">\\n\\n                            <div class=\\\"form-label-group\\\">\\n                                <input type=\\\"text\\\" name=\\\"nombre\\\" id=\\\"nombre\\\" class=\\\"form-control\\\" placeholder=\\\"Nombre\\\" ngModel required minlength=5 autofocus>\\n                                <label for=\\\"inputEmail\\\">Nombre</label>\\n                            </div>\\n\\n                            <div *ngIf=\\\"!frmRegister.valid\\\">\\n                                <div class=\\\"alert-danger\\\" *ngIf=\\\"this.frmRegister.controls.nombre.invalid && (this.frmRegister.controls.nombre.dirty || this.frmRegister.controls.nombre.touched)\\\" style=\\\"margin-bottom:5px\\\" role=\\\"alert\\\">\\n                                    <div class=\\\"container-error-message\\\">\\n                                        Ingrese un Nombre <b>valido</b>!\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-label-group\\\">\\n                                <input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Correo Electronico\\\" ngModel minlength=5 pattern=\\\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\" required>\\n                                <label for=\\\"inputEmail\\\">Correo Electronico</label>\\n                            </div>\\n\\n                            <div *ngIf=\\\"!frmRegister.valid\\\">\\n                                <div class=\\\"alert-danger\\\" *ngIf=\\\"this.frmRegister.controls.email.invalid && (this.frmRegister.controls.email.dirty || this.frmRegister.controls.email.touched)\\\" style=\\\"margin-bottom:5px\\\" role=\\\"alert\\\">\\n                                    <div class=\\\"container-error-message\\\">\\n                                        Ingrese un Email <b>valido</b>!\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-label-group\\\">\\n                                <input type=\\\"password\\\" name=\\\"contrasena\\\" id=\\\"contrasena\\\" class=\\\"form-control\\\" placeholder=\\\"Contrasena\\\" ngModel required>\\n                                <label for=\\\"inputPassword\\\">Contrasena</label>\\n                            </div>\\n\\n                            <div *ngIf=\\\"!frmRegister.valid\\\">\\n                                <div class=\\\"alert-danger\\\" *ngIf=\\\"this.frmRegister.controls.contrasena.invalid && (this.frmRegister.controls.contrasena.dirty || this.frmRegister.controls.contrasena.touched)\\\" style=\\\"margin-bottom:5px\\\" role=\\\"alert\\\">\\n                                    <div class=\\\"container-error-message\\\">\\n                                        Ingrese una Contrasena <b>valida</b>!\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-label-group\\\">\\n                                <input type=\\\"radio\\\" name=\\\"tipoUsuario\\\" id=\\\"tipoUsuario\\\" value=\\\"Conductor\\\" ngModel required> Conductor\\n                                <input type=\\\"radio\\\" name=\\\"tipoUsuario\\\" id=\\\"tipoUsuario\\\" value=\\\"Administrador\\\" ngModel required> Administrador\\n                            </div>\\n                            <label for=\\\"tipoUsuario\\\">Tipo de Usuario</label>\\n\\n                            <div *ngIf=\\\"!frmRegister.valid\\\">\\n                                <div class=\\\"alert-danger\\\" *ngIf=\\\"this.frmRegister.controls.tipoUsuario.invalid && (this.frmRegister.submitted && this.frmRegister.controls.tipoUsuario.untouched)\\\" style=\\\"margin-bottom:5px\\\" role=\\\"alert\\\">\\n                                    <div class=\\\"container-error-message\\\">\\n                                        Seleccione un TipoUsuario!\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-label-group\\\">\\n                                <input type=\\\"hidden\\\" name=\\\"estado\\\" value=\\\"false\\\" class=\\\"form-control\\\" ngModel>\\n                            </div>\\n\\n                            <button class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\" type=\\\"submit\\\" value=\\\"Register\\\">Registrar</button>\\n                            <hr class=\\\"my-4\\\">\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</body>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Bus } from 'src/app/models/bus';\nimport { Ruta } from '../models/ruta';\n\n\nexport class Marcador {\n    public latitud: number;\n    public longitud: number;\n    public sentido: number;\n\n    public placa: string;\n    public ruta: Ruta;\n\n    constructor(bus: Bus) {\n        this.placa = bus.placa;\n        this.ruta = bus.RutaAsociada;\n        this.latitud = bus.latitud;\n        this.longitud = bus.longitud;\n        this.sentido = bus.sentido;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'metrolinea';\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n// Rutas\nimport {APP_ROUTING} from './app.routes';\n\n// Servicios\nimport { RutasService } from './services/rutas.service';\nimport { AuthService } from './services/auth.service';\n\n// Componentes\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\n\n// maps\nimport { AgmCoreModule } from '@agm/core';\nimport { MapaComponent } from './components/mapa/mapa.component';\nimport { MapaEditarComponent } from './components/mapa/mapa-editar.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Mapa2Component } from './components/mapa2/mapa2.component';\nimport { EditBusesComponent } from './components/edit-buses/edit-buses.component';\nimport { BusComponent } from './components/bus/bus.component';\nimport { BusesComponent } from './components/buses/buses.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { TarjetaBusComponent } from './components/tarjeta-bus/tarjeta-bus.component';\nimport { NavbarComponent } from './components/shared/navbar/navbar.component';\nimport { RegisterComponent } from './components/usuario/register/register.component';\nimport { ConductorComponent } from './components/conductor/conductor.component';\nimport { LoginComponent } from './components/usuario/login/login.component';\n\n\n\n@NgModule({\n  entryComponents: [\n    MapaEditarComponent\n  ],\n  declarations: [\n    AppComponent,\n    MapaComponent,\n    MapaEditarComponent,\n    Mapa2Component,\n    EditBusesComponent,\n    BusComponent,\n    BusesComponent,\n    HomeComponent,\n    SearchComponent,\n    TarjetaBusComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    ConductorComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    APP_ROUTING,\n    FormsModule,\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyDVC3W4TABNrGYhCq8fRR81Et4uFkoTh08'\n    })\n  ],\n  providers: [\n    RutasService,\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { RouterModule, Routes} from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { EditBusesComponent } from './components/edit-buses/edit-buses.component';\nimport { BusesComponent } from './components/buses/buses.component';\nimport { BusComponent } from './components/bus/bus.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { LoginComponent } from './components/usuario/login/login.component';\nimport { RegisterComponent } from './components/usuario/register/register.component';\nimport { AdminGuard } from './guards/admin.guard';\nimport { ConductorComponent } from './components/conductor/conductor.component';\nimport { ConductorGuard } from './guards/conductor.guard';\n\nconst APP_ROUTES: Routes = [\n{path: 'home', component: HomeComponent},\n{path: 'about', component: EditBusesComponent, canActivate: [ AdminGuard ]},\n{path: 'buses', component: BusesComponent},\n{path: 'login', component: LoginComponent} ,\n{path: 'conductor', component: ConductorComponent, canActivate: [ ConductorGuard ]} ,\n{path: 'registrar', component: RegisterComponent, canActivate: [ AdminGuard ]},\n{path: 'bus/:termino', component: BusComponent},\n{path: 'search/:termino', component: SearchComponent},\n{path: '', pathMatch: 'full', redirectTo: '/home'},  // regresa a la home\n\n];\n\nexport const APP_ROUTING = RouterModule.forRoot(APP_ROUTES);\n","export default \"agm-map {\\n    height: 400px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9idXMvYnVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9idXMvYnVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhZ20tbWFwIHtcbiAgICBoZWlnaHQ6IDQwMHB4O1xufSJdfQ== */\"","import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RutasService } from '../../services/rutas.service';\nimport { BusService } from '../../services/bus.service';\nimport { Bus } from 'src/app/models/bus';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Marcador } from '../../Class/marcador.class';\nimport { MapaEditarComponent } from '../mapa/mapa-editar.component';\n\n\n@Component({\n  selector: 'app-bus',\n  templateUrl: './bus.component.html',\n  styleUrls: ['./bus.component.css']\n})\nexport class BusComponent implements OnDestroy {\n\n  ruta: any = {};\n  MysetInterval: any;\n\n  BusesAsociadosRuta: Bus[];\n\n  marcadores: Marcador[] = [];\n  latCentroMapa = 7.11392;\n  lngCentroMapa = -73.1198;\n\n  constructor( private activatedRoute: ActivatedRoute,\n               private rutasService: RutasService, private busService: BusService,\n               public dialog: MatDialog) {\n\n    this.activatedRoute.params.subscribe(params => {\n        this.ruta = this.rutasService.getRuta( params.termino);\n    });\n    this.busService.getBuses();\n    this.BusesAsociadosRuta = this.busService.busesPorRuta(this.ruta.nombre);\n    this.Watcher();\n  }\n\n\n\n  ngOnDestroy(): void {\n    if (this.MysetInterval) {\n      clearInterval(this.MysetInterval);\n    }\n  }\n\n  UbicarEnMapa(latitud: number, longitud: number, sentido: number) {\n    console.log(latitud, ',', longitud, ',', sentido);\n    this.latCentroMapa = latitud;\n    this.lngCentroMapa = longitud;\n  }\n\n  // Se encarga de actualizar cada 3 segundos la posicion de los buses en todos los usuarios (en base de datos)\n  Watcher() {\n    this.MysetInterval = setInterval( () => {\n      // console.log(2);\n      this.BusesAsociadosRuta = this.busService.busesPorRuta(this.ruta.nombre);\n      this.crearMarcadoresPorRuta();\n    }, 3000);\n  }\n\n  // recorre los buses asociados a la ruta y por cada uno que su conductorAsociado tenga estado true\n  // crea un marcador para mostrar en el mapa\n  crearMarcadoresPorRuta() {\n    this.marcadores = [];\n    for (const bus of this.BusesAsociadosRuta) {\n      if (bus.ConductorAsociado.estado === true) {\n        const nuevoMarcador = new Marcador(bus);\n        this.marcadores.push(nuevoMarcador);\n      }\n    }\n  }\n\n  CuadroDialogo(marcador: Marcador): void {\n    const dialogRef = this.dialog.open(MapaEditarComponent, {\n      width: '250px',\n      data: {placa: marcador.placa, ruta: marcador.ruta}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      // aqui podemos actuliazar la posicion del bus cada vez que sea cerrado el dialogo\n      // this.snackBar.open(' Marcador actualizado ', 'Cerrar', {duration: 3000});\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RutasService } from '../../services/rutas.service';\nimport { Router } from '@angular/router';\nimport {Ruta} from '../../models/ruta';\nimport { RutaService } from '../../services/ruta.service';\n\n@Component({\n  selector: 'app-buses',\n  templateUrl: './buses.component.html',\n  styles: []\n})\nexport class BusesComponent implements OnInit {\n\n   rutas: Ruta[] = [];\n\n  constructor(public rutaService: RutaService , public rutasServices: RutasService, private router: Router) {\n  }\n\n  ngOnInit() {\n     this.rutas = this.rutasServices.getRutas2();\n     this.getRutas();\n  }\n\n\n  // No es lo ideal pero aqui funciona.\n  getRutas() {\n    this.rutaService.getRuta()\n    .subscribe(res => {\n      // this.busService.buses = res as Bus[];\n      this.rutas = res as Ruta[];\n    });\n  }\n\n  // tslint:disable-next-line:one-line\n  // verBus(idx: number){\n  //   this.router.navigate(['/bus', idx]);\n  // }\n\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29uZHVjdG9yL2NvbmR1Y3Rvci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { BusService } from 'src/app/services/bus.service';\nimport { Bus } from 'src/app/models/bus';\n\ndeclare var M: any;\n\n@Component({\n  selector: 'app-conductor',\n  templateUrl: './conductor.component.html',\n  styleUrls: ['./conductor.component.css']\n})\nexport class ConductorComponent implements OnInit {\n\n  busAsociadoConductor = new Bus();\n  id: any;\n  constructor(public auth: AuthService, public busService: BusService) {}\n\n  // hay que hacer que el boton No mostrar posicion se mantenga si se esta mostrando la posicion\n  // y que si el conductor no tiene bus asociado estos botones se deshabiliten\n  // implementar el NgOnDestroy para que cuando el Conductor salga de la pestana se ejecute el metodo\n  // reiniciarPosicion\n  // recordar cuando esta funcionando el watchposition\n\n  ngOnInit() {\n    document.getElementById('noMostrarPosicion').style.display = 'none';\n    document.getElementById('mostrarPosicion').style.display = 'inline';\n    this.busService.getBus().\n    subscribe(res => {\n      this.busService.getBuses();\n\n      this.auth.getUser()\n      .subscribe(res1 => {\n        this.auth.getUsers();\n        this.encontrarBusConductor( res as Bus[]);\n      });\n  });\n  }\n\n  // Busca el bus Asignado al conductor y lo muestra en conductor.html\n  encontrarBusConductor(buses: Bus[]) {\n    for (const bus of buses) {\n      if (this.auth.getUserLogueado().email === bus.ConductorAsociado.email) {\n        this.busAsociadoConductor = bus;\n      }\n    }\n    // console.log(this.busAsociadoConductor);\n  }\n\n  // Actualiza el id en authService para que pueda ser eliminado el watchPosition al hacer logout\n  eliminarPosicion() {\n    this.auth.id = this.id;\n    this.auth.borrarWatchPosition(this.id);\n  }\n\n// borra el warchPosition mediante un boton y deja de mostrar y actualizar la posicion\n  noMostrarPosicion() {\n    document.getElementById('noMostrarPosicion').style.display = 'none';\n    document.getElementById('mostrarPosicion').style.display = 'inline';\n    navigator.geolocation.clearWatch(this.id);\n    this.reiniciarPosicion();\n  }\n\n  reiniciarPosicion() {\n    this.busAsociadoConductor.latitud = 0;\n    this.busAsociadoConductor.longitud = 0;\n    this.busAsociadoConductor.sentido = 0;\n    this.actualizarPosicionEnBaseDeDatos();\n  }\n\n  // muestra y actualiza la posicion del conductor en la base de datos\n  mostrarPosicion() {\n    document.getElementById('noMostrarPosicion').style.display = 'inline';\n    document.getElementById('mostrarPosicion').style.display = 'none';\n\n    if (this.auth.getUserLogueado().tipoUsuario === 'Conductor') {\n      if (navigator.geolocation) {\n        this.id = navigator.geolocation.watchPosition(datos => {\n          this.eliminarPosicion();\n          console.log('watchPosition');\n          if (this.busAsociadoConductor.latitud !==  datos.coords.latitude || this.busAsociadoConductor.longitud !==  datos.coords.longitude\n           || this.busAsociadoConductor.sentido !== datos.coords.heading) {\n\n          this.busAsociadoConductor.latitud =  datos.coords.latitude;\n          this.busAsociadoConductor.longitud =  datos.coords.longitude;\n          this.busAsociadoConductor.sentido = datos.coords.heading;\n\n          this.actualizarPosicionEnBaseDeDatos();\n           }\n      }, () => { console.log('No esta activado el gps'); M.toast({html: 'No esta activado el gps'});  });\n      } else {\n              this.reiniciarPosicion();\n             }\n    }\n\n  }\n\n  // Actualiza la posicion en base de datos\n  actualizarPosicionEnBaseDeDatos() {\n    this.busService.putBus(this.busAsociadoConductor).subscribe(res => {\n      M.toast({html: 'Posicion actualizada satisfactoriamente'});\n      this.busService.getBuses();\n    });\n  }\n\n}\n","export default \"th,\\ntd {\\n    padding: 10px;\\n    text-align: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9lZGl0LWJ1c2VzL2VkaXQtYnVzZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxhQUFhO0lBQ2IsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9lZGl0LWJ1c2VzL2VkaXQtYnVzZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRoLFxudGQge1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Ruta } from 'src/app/models/ruta';\nimport { RutaService } from '../../services/ruta.service';\nimport { RutasService } from '../../services/rutas.service';\nimport { BusService } from '../../services/bus.service';\nimport { Bus } from 'src/app/models/bus';\nimport { AuthService } from '../../services/auth.service';\nimport { UserI } from 'src/app/models/user';\nimport { MapaEditarComponent } from '../mapa/mapa-editar.component';\nimport { MatDialog } from '@angular/material/dialog';\n\ndeclare var M: any;\n\n@Component({\n  selector: 'app-edit-buses',\n  templateUrl: './edit-buses.component.html',\n  styleUrls: ['./edit-buses.component.css'],\n  providers: [RutaService, BusService, AuthService]\n})\nexport class EditBusesComponent implements OnInit {\n\n  selectedRuta1 = new Ruta();\n  selectedRutas1: Ruta[] = [];\n  selectedRutas2: Ruta[] = [];\n\n  selectedBus1 = new Bus();\n  selectedBuses1: Bus[] = [];\n\n  selectedConductor1 = new UserI();\n  selectedConductores1: UserI[] = [];\n  conductoresSinBus: UserI[] = [];\n\n\n  constructor(public rutaService: RutaService, public rutasService: RutasService,\n              public busesService: BusService, public authService: AuthService,\n              public dialog: MatDialog) {}\n\n// this.snackBar.open(' Marcador actualizado ', 'Cerrar', {duration: 3000}); mirar que hace esto\n  ngOnInit() {\n    this.getRutas();\n    this.rutasService.getRutas();\n\n    this.getBuses();\n    this.busesService.getBuses();\n\n    this.getConductores();\n    this.authService.getUsers();\n  }\n\n  getRutasByTipoBus(tipoBus: string) {\n    this.selectedRutas2 = this.rutasService.getRutasByTipoBus(tipoBus);\n  }\n\n buscarRuta(buscarTexto: string) {\n     this.selectedRutas1 = this.rutasService.buscarRutas(buscarTexto);\n   }\n\n  addRuta(form: NgForm) {\n\n    form.value.imagenBus = `assets/img/${form.value.nombre}.png `;\n\n    // console.log(form.value);\n\n    if (form.value._id) {\n        // console.log('Paso 1', form.value);\n        this.rutaService.putRuta(form.value)\n        .subscribe(res => {\n          this.actualizarRutaEnBuses(form.value);\n          // this.resetForm(form);\n          M.toast({html: 'Bus actualizado satisfactoriamente'});\n          this.getRutas();\n      });\n    } else {\n        // console.log('Paso 1.1', form.value);\n        form.value.NumBusesAsociados = 0;\n        this.rutaService.postRuta(form.value)\n        .subscribe(res => {\n          // console.log(form.value, 'XXXXXX');\n          // console.log('Paso 2.1');\n          // this.resetForm(form);\n          M.toast({html: 'Guardado satisfactoriamente'});\n          this.getRutas();\n  });\n  }\n}\n\naddRuta2(bus: Ruta) {\n\n  // this.actualizarBusEnConductores(bus);\n  if (bus._id) {\n\n    this.rutaService.putRuta(bus)\n    .subscribe(res => {\n      this.actualizarRutaEnBuses(bus);\n      M.toast({html: 'bus2 actualizado satisfactoriamente'});\n      this.getRutas();\n    });\n  }\n}\n\n  getRutas() {\n    this.rutasService.getRutas();\n    this.rutaService.getRuta()\n    .subscribe(res => {\n      this.rutaService.rutas = res as Ruta[];\n      this.selectedRutas1 = res as Ruta[];\n     // console.log(res, 'yyyyyyyyyyy');\n    });\n  }\n\n  editRuta(bus: Ruta) {\n    this.getRutas();\n    this.rutaService.selectedRuta = bus;\n    this.selectedRuta1 = bus;\n  }\n\n  // tslint:disable-next-line:variable-name\n  deleteRuta(_id: string) {\n    // No permitir eliminar un bus si este tiene conductores asociados\n    this.selectedRuta1 = this.rutasService.getRutaById(_id);\n    if (this.selectedRuta1.NumBusesAsociados === 0 || this.selectedRuta1.NumBusesAsociados === null) {\n\n    this.rutaService.deleteRuta(_id)\n    .subscribe(res => {\n      this.getRutas();\n      M.toast({html: 'Eliminado satisfactoriamente'});\n    });\n    this.selectedRuta1 = new Ruta();\n  } else { console.log('El bus tiene conductores asociados'); }\n  }\n\n  resetForm(form?: NgForm) {\n\n    if (form) {\n      form.reset();\n      this.rutaService.selectedRuta = new Ruta();\n      // console.log(this.selectedBus1, 'RRRRR');\n    }\n    this.getRutas();\n  }\n\n  resetForm2(form?: NgForm) {\n\n    if (form) {\n      form.reset();\n      this.selectedRuta1 = new Ruta();\n    }\n  }\n\n\n // ********************************************************************************************************************************\n // ********************************************************************************************************************************\n // ********************************************************************************************************************************\n // ********************************************************************************************************************************\n\n  // Es utilizado en el buscador de buses por nombre\n  buscarBus(buscarTexto: string) {\n     this.selectedBuses1 = this.busesService.buscarBuses(buscarTexto);\n   }\n\n  // Crea un nuevo bus o edita uno existente en base de datos\n  addBus(form: NgForm) {\n\n    // el formulario siempre envia null a estos parametros, por ende esta es una solucion a ese problema\n    form.value.latitud = 0;\n    form.value.longitud = 0;\n    form.value.sentido = 0;\n\n    if (form.value._id) {\n      // form.value.posicion = {\n      //   lat: 1 , lng: 2, nombre: form.value.nombre, ruta: form.value.bio\n      // };\n      this.busesService.putBus(form.value)\n      .subscribe(res => {\n        // this.resetForm1(form);\n        M.toast({html: 'Bus actualizado satisfactoriamente'});\n        this.getBuses();\n      });\n    } else {\n      this.busesService.postBus(form.value)\n      .subscribe(res => {\n        // this.resetForm1(form);\n        M.toast({html: 'Guardado satisfactoriamente'});\n        this.getBuses();\n    });\n  }\n}\n\n  // Obtiene los buses de la base de datos y actualiza las variables busesService.bus y selectedBuses1 con estos\n  getBuses() {\n    this.busesService.getBuses();\n    this.busesService.getBus()\n    .subscribe(res => {\n      this.busesService.bus = res as Bus[];\n      this.selectedBuses1 = res as Bus[];\n      // console.log(this.selectedConductores1, 'yyyyyyyyyyy');\n    });\n  }\n\n  // no edita buses, recive el bus que va a ser editado o eliminado\n  editBus(bus: Bus) {\n    this.getBuses();\n    this.busesService.selectedBus = bus;\n    this.selectedBus1 = bus;\n    // console.log(conductor, 'XXXXXXXXXXX');\n  }\n\n  // tslint:disable-next-line:variable-name\n  deleteBus(_id: string) {\n    // Actualiza el numero de conductores asociados a la ruta del conductor a eliminar\n    this.selectedBus1 = this.busesService.getBusById(_id);\n    this.selectedBus1.RutaAsociada.NumBusesAsociados -= 1;\n    this.addRuta2(this.selectedBus1.RutaAsociada);\n    // Elimina el conductor\n    this.busesService.deleteBus(_id)\n    .subscribe(res => {\n      this.getBuses();\n      M.toast({html: 'Bus Eliminado satisfactoriamente'});\n    });\n    this.selectedBus1 = new Bus();\n  }\n\n  resetForm1(form?: NgForm) {\n\n    if (form) {\n      form.reset();\n      this.busesService.selectedBus = new Bus();\n      this.selectedBus1 = new Bus();\n    }\n    this.getBuses();\n  }\n\n  // Permite asociar una Ruta a un bus, ademas actualiza el numero de buses asociados a una ruta\n  asignarRutaBus(form: NgForm) {\n    // esto es un form que se convierte en Ruta y es la nueva ruta para el bus y selectedBus1.rutaAsociada es la ruta actual\n    this.selectedRuta1 = form.value.ruta;\n    if (form.value.ruta === '' || form.value.ruta === null) { this.selectedRuta1 = new Ruta(); }\n\n    // this.selectedBus1.arrayBuses = '';\n    if (this.selectedBus1.RutaAsociada._id === this.selectedRuta1._id) {\n      console.log('No hacer nada porque no se esta cambiando el bus');\n      // this.selectedBus1.NumBusesAsociados = 0;\n      // this.addBus2(this.selectedBus1);\n    } else {\n      if (form.value.ruta !== '' && form.value.ruta !== null) {\n        this.selectedRuta1.NumBusesAsociados += 1;\n        this.addRuta2(this.selectedRuta1);\n      }\n      // this.actualizarBusEnConductores(this.selectedBus1, 'x1');\n\n      this.selectedBus1.RutaAsociada.NumBusesAsociados += -1;\n      this.addRuta2(this.selectedBus1.RutaAsociada);\n      // this.actualizarBusEnConductores(this.selectedConductor1.RutaAsociada, 'x2');\n      // console.log(this.selectedConductor1.RutaAsociada, '11111xxxx');\n      // this.getBuses();\n\n      // console.log(this.selectedBus1, '22222xxxxx');\n      this.selectedBus1.RutaAsociada = this.selectedRuta1;\n      // console.log(this.selectedBus1 );\n      this.addBus2(this.selectedBus1);\n            }\n  }\n\n  // Permite asociar un Conductor a un bus\n  asignarConductorBus(form: NgForm) {\n    // esto es un form que se convierte en UserI y es el nuevo Conductor para el bus y selectedBus1.ConductorAsociado es el Conductor actual\n    this.selectedConductor1 = form.value.conductor;\n    if (form.value.conductor === '' || form.value.conductor === null) { this.selectedConductor1 = new UserI(); }\n\n    if (this.selectedBus1.ConductorAsociado._id === this.selectedConductor1._id) {\n      console.log('No hacer nada porque no se esta cambiando el Conductor');\n    } else {\n      this.selectedBus1.ConductorAsociado = this.selectedConductor1;\n      this.addBus2(this.selectedBus1);\n            }\n  }\n\n  addBus2(bus: Bus) {\n    this.getBuses();\n    if (bus._id) {\n      this.busesService.putBus(bus)\n        .subscribe(res => {\n          this.getBuses();\n        });\n    }\n  }\n\n\n  actualizarRutaEnBuses(ruta: Ruta) {\n    this.getBuses();\n    // tslint:disable-next-line:prefer-const\n    for (let bus1 of this.selectedBuses1) {\n        if (bus1.RutaAsociada._id === ruta._id) {\n            if (this.selectedBus1._id !== bus1._id) {\n                // console.log(conductor.placa, ' tiene ', conductor.RutaAsociada.nombre);\n                bus1.RutaAsociada = ruta;\n                // console.log(conductor.placa, ' fue actualizado con ', conductor.RutaAsociada.nombre);\n                this.addBus2(bus1);\n            }\n        }\n    }\n\n    // for (let conductor of this.selectedConductores1) {\n    //   for (let bus1 of this.selectedBuses1) {\n    //       if (conductor.RutaAsociada._id === bus1._id) {\n    //         conductor.RutaAsociada = bus1;\n    //         this.addConductor2(conductor);\n    //       }\n    //   }\n    // }\n  }\n\n  // Al hacer un cambio en un conductor este metodo actualiza esos cambios en el bus asociado al conductor\n  actualizarConductorEnBuses(conductor: UserI) {\n    this.getBuses();\n    for (const bus1 of this.selectedBuses1) {\n        if (bus1.ConductorAsociado._id === conductor._id) {\n                bus1.ConductorAsociado = conductor;\n                this.addBus2(bus1);\n        }\n    }\n  }\n\n  // ********************************************************************************************************************************\n  // ********************************************************************************************************************************\n  // ********************************************************************************************************************************\n  // ********************************************************************************************************************************\n\n\n  // Es utilizado en el buscador de buses por nombre\n  buscarConductor(buscarTexto: string) {\n    this.selectedConductores1 = this.authService.buscarConductores(buscarTexto);\n  }\n\n  // Edita un Conductor existente en base de datos\n  // por precaucion de debe arreglar en el html que solo permita editar un usuario mientras el estado sea false*****\n  // (al parecer arreglado .. er unproblema de restForm innecesario)\n  addConductor(form: NgForm) {\n    // form.value.estado = false;\n    if (form.value._id) {\n      this.authService.putUser(form.value)\n      .subscribe(res => {\n      this.actualizarConductorEnBuses(form.value);\n      // this.resetForm3(form);\n      M.toast({html: 'Conductor actualizado satisfactoriamente'});\n      this.getConductores();\n     });\n   }\n  }\n\n // Obtiene los Conductores de la base de datos y actualiza las variables selectedConductores1 con estos\n  getConductores() {\n    this.authService.getUsers();\n    this.authService.getUser()\n    .subscribe(res => {\n      this.selectedConductores1 = this.authService.getUsersConductores( res as UserI[]);\n      this.authService.userConductores = this.selectedConductores1;\n      this.getConductoresSinBus();\n    });\n  }\n\n  // Obtiene los conductores que aun no han sido asociados a un bus\n  getConductoresSinBus() {\n    this.conductoresSinBus = [];\n    let tieneBus: boolean;\n    for (const conductor of this.selectedConductores1) {\n      tieneBus = false;\n      for (const bus of this.selectedBuses1) {\n        if (conductor.email === bus.ConductorAsociado.email) {\n          tieneBus = true;\n        }\n      }\n      if (tieneBus === false ) { this.conductoresSinBus.push(conductor); }\n    }\n  }\n\n // no edita conductores, recibe el conductor que va a ser editado o eliminado\n  editConductor(conductor: UserI) {\n    this.getConductores();\n    // this.authService.selectedUser = conductor;\n    this.selectedConductor1 = conductor;\n  }\n\n // tslint:disable-next-line:variable-name\n  deleteConductor(_id: string) {\n\n    // this.selectedConductor1 = this.authService.getUserIConductorById(_id);\n    // Elimina un conductor\n    let sePuedeEliminar = false;\n    for (const conductor of this.conductoresSinBus) {\n      if (conductor._id === _id) { sePuedeEliminar = true; } // verifica si el conductor esta asocidado a un bus\n    }\n    if (sePuedeEliminar) {\n      this.authService.deleteUser(_id)\n      .subscribe(res => {\n        this.getConductores();\n        M.toast({html: 'Conductor Eliminado satisfactoriamente'});\n      });\n      this.selectedConductor1 = new UserI();\n    } else { console.log('No se puede eliminar, primero debe desvicularlo del bus'); }\n  }\n\n  resetForm3(form?: NgForm) {\n\n    if (form) {\n      form.reset();\n      this.selectedConductor1 = new UserI();\n    }\n    this.getConductores();\n  }\n\n  // edita un conductor pero recibiendo como parametro ese conductor y no un NgForm\n  addConductor2(conductor: UserI) {\n    this.getConductores();\n    if (conductor._id) {\n      this.authService.putUser(conductor)\n        .subscribe(res => {\n         this.actualizarConductorEnBuses(conductor);\n         this.getConductores();\n       });\n    }\n  }\n\n\n  CuadroDialogo1(): void {\n    const dialogRef = this.dialog.open(MapaEditarComponent, {\n      width: '450px',\n      data: {placa: this.selectedBus1.placa, ruta: this.selectedBus1.RutaAsociada}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      // aqui podemos actuliazar la posicion del bus cada vez que sea cerrado el dialogo\n      // this.snackBar.open(' Marcador actualizado ', 'Cerrar', {duration: 3000});\n    });\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n// import {} from 'googlemaps';\n// import { ViewChild } from '@angular/core';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent implements OnInit {\n\n//   @ViewChild('map') mapElement: any;\n//   map: google.maps.Map;\n\n   constructor() { }\n    ngOnInit() {}\n//   ngOnInit(): void {\n//     const mapProperties = {\n//          center: new google.maps.LatLng(35.2271, -80.8431),\n//          zoom: 15,\n//          mapTypeId: google.maps.MapTypeId.ROADMAP\n//     };\n//     this.map = new google.maps.Map(this.mapElement.nativeElement,    mapProperties);\n//  }\n\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\nimport {FormBuilder, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-mapa-editar',\n  templateUrl: './mapa-editar.component.html'\n})\nexport class MapaEditarComponent implements OnInit {\n\n  forma: FormGroup;\n\n  constructor(\n    public fb: FormBuilder,\n    public dialogRef: MatDialogRef<MapaEditarComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n\n      console.log(data);\n      this.forma = fb.group({\n        placa: data.placa,\n        ruta: data.ruta,\n        color: data.color\n      });\n    }\n\n  ngOnInit() {\n  }\n\n  // guardarCambios() {\n  //   this.dialogRef.close(this.forma.value);\n  // }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","export default \"agm-map {\\n    height: 400px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9tYXBhL21hcGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL21hcGEvbWFwYS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYWdtLW1hcCB7XG4gICAgaGVpZ2h0OiA0MDBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Marcador } from '../../Class/marcador.class';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MapaEditarComponent } from './mapa-editar.component';\n\n@Component({\n  selector: 'app-mapa',\n  templateUrl: './mapa.component.html',\n  styleUrls: ['./mapa.component.css']\n})\nexport class MapaComponent implements OnInit {\n\n marcadores: Marcador[] = [];\n lat = 7.11392;\n lng = -73.1198;\n lat1;\n lng1;\n\n  constructor(private snackBar: MatSnackBar, public dialog: MatDialog) {\n\n    // const nuevoMarcador = new Marcador(this.lat, this.lng);\n    // this.marcadores.push(nuevoMarcador);\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.watchPosition( async ( datos ) => {\n  //       // await console.log(datos.coords.latitude, 'asdasdasdasd3');\n  //       // await console.log(datos.coords.longitude, 'asdasdasdasd4');\n  //       this.lat1 = datos.coords.latitude;\n  //       this.lng1 = datos.coords.longitude;\n  //       console.log(this.lat1, ' ZZZZZZ ', this.lng1);\n\n  //     },\n  //      () => { console.log('No esta activado el gps'); });\n  // } else {\n  //   this.lat1 = 7.11392;\n  //   this.lng1 = -73.1198;\n  // }\n    if (localStorage.getItem('marcadores')) {\n        this.marcadores = JSON.parse(localStorage.getItem('marcadores'));\n    }\n  }\n\n  ngOnInit() {\n    console.log(this.lat, 'DDDDD');\n  }\n\n  moverMapa(evento) {\n    console.log('it changed');\n    this.lat = this.lat1;\n    this.lng = this.lng1;\n  }\n\n  agregarMarcador(evento) {\n\n    const coords: {lat: number, lng: number} = evento.coords;\n    console.log(coords.lat, ' YYYYY ', coords.lng);\n    // const nuevoMarcador = new Marcador(coords.lat, coords.lng);\n    // this.marcadores.push(nuevoMarcador);\n    this.guardarStorage();\n  }\n\n  guardarStorage() {\n    localStorage.setItem('marcadores', JSON.stringify(this.marcadores));\n    this.snackBar.open(' Marcador agregado ', 'Cerrar', {duration: 3000});\n  }\n\n  editarMarcador(marcador: Marcador): void {\n    const dialogRef = this.dialog.open(MapaEditarComponent, {\n      width: '250px',\n    //  data: {nombre: marcador.nombre, ruta: marcador.ruta}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if ( !result ) {\n        return;\n      }\n     // marcador.nombre = result.nombre;\n      marcador.ruta = result.ruta;\n\n      this.guardarStorage();\n      this.snackBar.open(' Marcador actualizado ', 'Cerrar', {duration: 3000});\n    });\n  }\n\n\n  borrarMarcador(i: number) {\n    this.marcadores.splice( i , 1 );\n    this.guardarStorage();\n    this.snackBar.open(' Marcador borrado ', 'Cerrar', {duration: 3000});\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFwYTIvbWFwYTIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {} from 'googlemaps';\nimport { ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-mapa2',\n  templateUrl: './mapa2.component.html',\n  styleUrls: ['./mapa2.component.css']\n})\n\n\n\nexport class Mapa2Component implements OnInit {\n\n  @ViewChild('map', {static: true}) mapElement: any;\n  map: google.maps.Map;\n  constructor() { }\n\n  lat;\n  lng;\n\n\n  async ngOnInit(): Promise<void> {\n    await this.posicion();\n }\n\n async posicion() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(async (datos) => {\n      // console.log( await datos.coords.latitude, 'asdasdasdasd3');\n      // console.log( await datos.coords.longitude, 'asdasdasdasd4');\n      this.lat = await datos.coords.latitude;\n      this.lng = await datos.coords.longitude;\n      console.log(this.lat, ' @@@@@@@ ', this.lng);\n      const mapProperties = {\n        center: new google.maps.LatLng(this.lat, this.lng),\n        zoom: 15,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n      };\n      this.map = new google.maps.Map(this.mapElement.nativeElement, mapProperties);\n      const marker = new google.maps.Marker({\n        position: new google.maps.LatLng(7.1315202 , -73.123147),\n        icon: 'assets/bus-solid.svg',\n        map: this.map\n      });\n    }, () => { console.log('No esta activado el gps'); });\n} else {\n  this.lat = 7.11392;\n  this.lng = -73.1198;\n}\n  console.log(this.lat, ' @@@@@@@2 ', this.lng);\n  // if (localStorage.getItem('marcadores')) {\n  //     this.marcadores = JSON.parse(localStorage.getItem('marcadores'));\n  // }\n }\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RutasService } from '../../services/rutas.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html'\n})\nexport class SearchComponent implements OnInit {\n\n  rutasSearch: any[] = [];\n  termino: string ;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private rutasServices: RutasService,\n              private router: Router) {}\n\n  ngOnInit() {\n        this.activatedRoute.params.subscribe(params => {\n          this.rutasSearch = this.rutasServices.buscarRutas( params.termino);\n          this.termino = params.termino;\n        } );\n        }\n\n        irRutas() {\n          this.router.navigate(['/buses']);\n        }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\nimport { UserI } from '../../../models/user';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html'\n})\nexport class NavbarComponent implements OnInit {\n\n  admin = 'inline' ;\n  // UsuarioActivo = new UserI();\n\n  constructor(private router: Router, public auth: AuthService) { }\n\n  ngOnInit() {\n    this.auth.getUser()\n    .subscribe(res => {\n      this.administrador();\n      this.auth.getUsers();\n      this.hola();\n      // this.UsuarioActivo = this.auth.getUserLogueado();\n    });\n\n  }\n\n  buscarBus(termino: string) {\n    // console.log(termino);\n    this.router.navigate(['/search', termino]);\n  }\n\n  administrador() {\n    this.auth.administrador();\n  }\n\n  salir() {\n    this.auth.logout();\n    this.administrador();\n    this.router.navigateByUrl('/login');\n  }\n\n  hola() {\n    window.addEventListener('beforeunload', (e) => {\n    const confirmationMessage = '\\o/';\n    this.auth.logout();\n    (e || window.event).returnValue = confirmationMessage; // Gecko + IE\n    return confirmationMessage;\n  });\n}\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-tarjeta-bus',\n  templateUrl: './tarjeta-bus.component.html'\n})\nexport class TarjetaBusComponent implements OnInit {\n\n  @Input() ruta: any = { };\n  @Input() termino: string;\n\n  constructor( private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  verRuta() {\n    this.router.navigate(['/bus', this.termino]);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\n\ndeclare var M: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n\n})\nexport class LoginComponent implements OnInit {\n\n\n  // tslint:disable-next-line:max-line-length\n  emailPattern = '/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/';\n\n\n  constructor(private authService: AuthService, private router: Router) {\n   }\n\n  ngOnInit() {\n  }\n\n\n  onLogin(form): void {\n\n    // console.log(form.valid);\n    if (form.valid) {\n      console.log('Valido');\n      // console.log('login1', form.value);\n      this.authService.login(form.value).subscribe(res => {\n      this.authService.administrador();\n      this.router.navigateByUrl('/home');\n    },\n    error => {\n      console.log(error, 'Ultimo error');\n      document.getElementById('errorEmail').style.display = 'inline';\n      setTimeout(() => {\n        this.errorEmail();\n      }, 3000);\n       }\n    );\n    } else { console.log('No valido');  M.toast({html: 'email no valido'});   }\n  }\n\n  // Oculta el mensaje que aparece al escribir una direccion de correo y/o contrasena equivocada\n  errorEmail(): string {\n    document.getElementById('errorEmail').style.display = 'none';\n    return 's';\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit {\n\n  // tslint:disable-next-line:max-line-length\n  emailPattern = '/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/';\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onRegister(form): void {\n\n    if (form.valid) {\n      console.log('Valido');\n      form.value.estado = false;\n      this.authService.register(form.value).subscribe(res => {\n        // this.router.navigateByUrl('/');\n        console.log('Registrado', form);\n        // form.controls.tipoUsuario.untouched = false;\n        form.reset();\n        form.submitted = false;\n        console.log(form.submitted, '123');\n        console.log('Registrado', form);\n        document.getElementById('UsuarioAgg').style.display = 'inline';\n        setTimeout(() => {\n          this.usuarioAgg();\n        }, 3000);\n\n      },\n      error => {console.log(error, 'error U.u'); }\n      );\n    } else { console.log('No valido'); }\n  }\n\n  usuarioAgg(): string {\n    document.getElementById('UsuarioAgg').style.display = 'none';\n    return 's';\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private auth: AuthService) { }\n  canActivate(): boolean {\n    // console.log('guard');\n    // return true;\n    return this.auth.estaAutenticadoUnAdministrador();\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConductorGuard implements CanActivate {\n\n  constructor(private auth: AuthService) { }\n  canActivate(): boolean {\n    // console.log('guard');\n    return this.auth.estaAutenticadoUnConductor();\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// angular material\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatInputModule\n  ],\n  exports: [\n    MatToolbarModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatCardModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatInputModule\n  ]\n})\nexport class MaterialModule { }\n","import { Ruta } from 'src/app/models/ruta';\nimport { UserI2 } from './user2';\n// esta clase es llamada conductor pero hace referencia a Bus.. que por errores a la hora del diseno se\n// nombr[o conductor.. se debe cambiar a bus al final.\nexport class Bus {\n\n    // tslint:disable-next-line:variable-name\n    constructor(_id = '', placa  = '', tipoBus = '', ConductorAsociado = new UserI2(), RutaAsociada = new Ruta(),\n                longitud = 0, latitud = 0, sentido = 0 ) {\n        this._id = _id;\n        // this.nombre = nombre;\n        // this.email = email;\n        // this.contrasena = contrasena;\n        this.placa = placa;\n        this.tipoBus = tipoBus;\n        this.RutaAsociada = RutaAsociada;\n        this.ConductorAsociado = ConductorAsociado;\n        this.longitud = longitud;\n        this.latitud = latitud;\n        this.sentido = sentido;\n    }\n\n    // tslint:disable-next-line:variable-name\n    _id: string;\n    placa: string;\n    tipoBus: string;\n    RutaAsociada: Ruta;\n    ConductorAsociado: UserI2;\n    longitud: number;\n    latitud: number;\n    sentido: number;\n}\n","// import { Marcador } from '../Class/marcador.class';\nexport class Ruta {\n\n    // tslint:disable-next-line:variable-name\n    constructor(_id = '', nombre = '', descripcion = '', imagenBus = '', Fecha  = '', imagenTipoBus = '',\n                NumBusesAsociados = 0, arrayBuses = ''  ) {\n        this._id = _id;\n        this.nombre = nombre;\n        this.descripcion = descripcion;\n        this.imagenBus = imagenBus;\n        this.Fecha = Fecha;\n        this.imagenTipoBus = imagenTipoBus;\n        this.NumBusesAsociados = NumBusesAsociados;\n        this.arrayBuses = arrayBuses;\n\n    }\n\n    // tslint:disable-next-line:variable-name\n    _id: string;\n    nombre: string;\n    descripcion: string;\n    imagenBus: string;\n    Fecha: string;\n    imagenTipoBus: string;\n    NumBusesAsociados: number;\n    arrayBuses: string;\n}\n","export class UserI {\n\n    // tslint:disable-next-line:variable-name\n    constructor(_id = '', nombre = '', email = '', contrasena = '', tipoUsuario = '', estado = false) {\n\n        this._id = _id;\n        this.nombre = nombre;\n        this.email = email;\n        this.contrasena = contrasena;\n        this.tipoUsuario = tipoUsuario;\n        this.estado = estado;\n\n    }\n    // tslint:disable-next-line:variable-name\n    _id: string;\n    nombre: string;\n    email: string;\n    contrasena: string;\n    tipoUsuario: string;\n    estado: boolean;\n}\n","export class UserI2 {\n\n    // tslint:disable-next-line:variable-name\n    constructor(_id = '', nombre = '', email = '', tipoUsuario = '', estado = false) {\n\n        this._id = _id;\n        this.nombre = nombre;\n        this.email = email;\n        this.tipoUsuario = tipoUsuario;\n        this.estado = estado;\n\n    }\n    // tslint:disable-next-line:variable-name\n    _id: string;\n    nombre: string;\n    email: string;\n    tipoUsuario: string;\n    estado: boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { UserI } from '../models/user';\nimport { JwtResponseI } from '../models/jwt-response';\nimport {tap } from 'rxjs/operators';\nimport {Observable, BehaviorSubject} from 'rxjs';\nimport { BusService } from './bus.service';\n\n@Injectable()\nexport class AuthService {\n  // AUTH_SERVER = 'http://localhost:3000/user';\n  // AUTH_SERVER2 = 'http://localhost:3000';\n  AUTH_SERVER = '/user';\n  AUTH_SERVER2 = '';\n  authSubject = new BehaviorSubject(false);\n  private token = '';\n  id: any;\n\n  selectedUser: UserI;\n  userConductores: UserI[];\n  Users: UserI[];\n\n\n  constructor(private httpClient: HttpClient, private busService: BusService) {\n    this.getUsers();\n    this.busService.getBuses();\n    this.selectedUser = new UserI();\n  }\n\n  // Obtiene todos los usuarios\n  getUser() {\n    return this.httpClient.get(this.AUTH_SERVER);\n  }\n\n  putUser(user: UserI) {\n    return this.httpClient.put(this.AUTH_SERVER + `/${ user._id }`, user);\n  }\n\n  putEstadoUser(user: UserI) {\n    return this.httpClient.put(this.AUTH_SERVER + `/estado/${ user._id }`, {estado: user.estado});\n  }\n\n  // tslint:disable-next-line:variable-name\n  deleteUser(_id: string) {\n    return this.httpClient.delete(this.AUTH_SERVER + `/${ _id }`);\n  }\n\n  // Crea usuarios\n  register(user: UserI): Observable<JwtResponseI> {\n    return this.httpClient.post<JwtResponseI>(`${this.AUTH_SERVER2}/register`,\n    user).pipe(tap(\n      (res: JwtResponseI) => {\n        if (res) {\n          // Nada\n        }\n      }\n    ));\n  }\n\n  // ********************************************************************************************\n  // ********************************************************************************************\n  // ********************************************************************************************\n  // ********************************************************************************************\n\n  // Obtener Users de la base de datos y guardarlos en la variable 'userConductores'\n  // tambien podria decirse que este metodo actualiza la variable 'userConductores'\n  getUsers() {\n    this.getUser()\n    .subscribe(res => {\n      this.Users = res as UserI[];\n      this.userConductores = this.getUsersConductores(res as UserI[]);\n      // console.log(this.userConductores, 'getUsers');\n      this.getSelectedUserByEmail();\n    });\n  }\n\n  // devuelve un array de UserI de tipo Conductor\n  getUsersConductores(users: UserI[]): UserI[] {\n    const conductores: UserI[] = [];\n    // console.log(users, 'XXX');\n    for (let user of users) {\n        user = user;\n        if (user.tipoUsuario === 'Conductor') {\n          conductores.push(user);\n        }\n    }\n    // console.log(conductores, 'SSSS');\n    this.userConductores = conductores;\n    return this.userConductores;\n  }\n\n  // Obtener un UserI de tipo Conductor por el ID\n  // tslint:disable-next-line:variable-name\n  getUserIConductorById(_id: string) {\n    for (let userConductor of this.userConductores) {\n          userConductor = userConductor;\n          if (userConductor._id === _id) {\n              return userConductor;\n          }\n    }\n  }\n\n  // Se utiliza en el buscador, obtiene un array con los Conductores que tengan el termino en su nombre\n  buscarConductores( termino: string) {\n    let ConductorArr: UserI[] = [];\n    ConductorArr = ConductorArr;\n    termino = termino.toLowerCase();\n    for ( let userConductor of this.userConductores) {\n      userConductor = userConductor;\n      let nombre: string = userConductor.nombre.toLowerCase();\n      nombre = nombre;\n      if (nombre.indexOf(termino) >= 0) {\n        ConductorArr.push(userConductor);\n      }\n    }\n    return ConductorArr;\n  }\n\n  // ********************************************************************************************\n  // ********************************************************************************************\n  // ********************************************************************************************\n  // ********************************************************************************************\n\n\n  login(user: UserI): Observable<JwtResponseI> {\n\n    return this.httpClient.post<JwtResponseI>(`${this.AUTH_SERVER2}/login`,\n    user).pipe(tap(\n      (res: JwtResponseI) => {\n        if (res) {\n          user = this.getUserConductorbyEmail(user.email);\n          user.estado = true; // Conectado\n          // console.log(user, 'Auth User login');\n          this.selectedUser = user;\n          this.actualizarConductorEnBuses(this.selectedUser);\n          this.putEstadoUser(this.selectedUser).subscribe( res2 => {\n            // console.log(res2, 'Usuario Activo');\n          });\n          this.administrador();\n          // Guardar Token\n          this.saveToken(res.dataUser.accessToken, res.dataUser.expiresIn, this.selectedUser.email);\n\n        }\n      },\n      error => { console.log(error, 'Email o Contrasena incorrecta'); }\n    ));\n    }\n\n  // asigna el id para luego ser borrado en logout, es usado en conductorComponent.ts\n  borrarWatchPosition(id: any) {\n    this.id = id;\n  }\n\n  // Cierra la sesion de un usuario anteriormente logueado y cambia su estado a false\n  logout(): void {\n    this.getSelectedUserByEmail();\n    this.selectedUser.estado = false; // Desconectado\n    this.putEstadoUser(this.selectedUser).subscribe( res => {\n      // console.log(res, 'Usuario Desconectado');\n    });\n    navigator.geolocation.clearWatch(this.id);\n    this.actualizarConductorEnBuses(this.selectedUser, 0);\n    this.selectedUser = new UserI();\n    this.token = '';\n    localStorage.removeItem('EMAIL');\n    localStorage.removeItem('ACCESS_TOKEN');\n    localStorage.removeItem('EXPIRES_IN');\n  }\n\n  // Actualiza el estado del conductorAsociado a un bus a la hora de hacer login y logout\n  actualizarConductorEnBuses(conductor: UserI, logout?: number) {\n    // this.busService.getBuses();\n    for (const bus1 of this.busService.getBuses2()) {\n      if (bus1.ConductorAsociado._id === conductor._id) {\n            bus1.ConductorAsociado = conductor;\n            if (logout === 0) {\n              bus1.latitud = 0;\n              bus1.longitud = 0;\n              bus1.sentido = 0;\n            }\n            this.busService.putBus(bus1)\n            .subscribe(res => {\n              this.busService.getBuses();\n            });\n      }\n    }\n  }\n\n  // Al loguearse un usuario se crean diferentes datos en el localStorage para controlar el cierre de sesion automatico (aun no funciona)\n  private saveToken( token: string, expiresIn: string, email: string): void {\n    localStorage.setItem('EMAIL', email);\n    localStorage.setItem('ACCESS_TOKEN', token);\n    localStorage.setItem('EXPIRES_IN', expiresIn);\n    this.token = token;\n  }\n\n  private getToken(): string {\n    if (!this.token) {\n      this.token = localStorage.getItem('ACCESS_TOKEN');\n    }\n    return this.token;\n  }\n\n  // Se utiliza para saber que usuario es el que esta logueado, se utiliza porque al refrescar la pagina se pierde este usuario\n  private getSelectedUserByEmail() {\n    if (localStorage.getItem('EMAIL')) {\n      this.selectedUser = this.getUserConductorbyEmail(localStorage.getItem('EMAIL'));\n    }\n  }\n\n  // Devuelve el usuario logueado\n  getUserLogueado(): UserI {\n    // this.getSelectedUserByEmail();\n    return this.selectedUser;\n  }\n\n  // Obterner un usuario por el email (Tambien es usado para administradores)\n  private getUserConductorbyEmail(termino: string) {\n    // console.log(this.Users, 'users getUserConductorbyEmail');\n    for (let userConductor of this.Users) {\n      userConductor = userConductor;\n      if (userConductor.email === termino) {\n        // console.log(userConductor, 'userConductor a devolver en getUserConductorbyEmail');\n        return userConductor;\n      }\n    }\n  }\n\n  // Con este metodo sabemos si el usuario logueado se encuentra activo\n  estaAutenticadoUnAdministrador(): boolean {\n    // this.getToken();\n    // if (localStorage.getItem('ACCESS_TOKEN')) {\n    //   return this.token.length > 2;\n    // } else { return false; }\n    let esAdmin = false;\n    // console.log(localStorage.getItem('EMAIL') , 'email localstoracge');\n    if (localStorage.getItem('EMAIL')) {\n    // this.getSelectedUserByEmail();\n    // console.log(this.selectedUser, 'selectedUser');\n    if (this.getUserConductorbyEmail(this.selectedUser.email)) {\n      for (const conductor of this.userConductores) {\n        if (conductor.email === this.selectedUser.email) {\n          return false; // Es Conductor\n        } else  { esAdmin = true; } // Es Administrador\n      }\n    }\n  }\n    // console.log(esAdmin, 'es administrador?');\n    return esAdmin;\n  }\n\n  estaAutenticadoUnConductor(): boolean {\n\n    let esCondu = false;\n    if (localStorage.getItem('EMAIL')) {\n    // this.getSelectedUserByEmail();\n    for (const conductor of this.userConductores) {\n      if (conductor.email === this.selectedUser.email) {\n        return true; // Es Conductor\n      } else  {esCondu = false; } // Es Administrador o no existe\n    }\n  }\n    return esCondu;\n  }\n\n  // Oculta las diferentes funciones dependiendo del tipo de usuario logueado o invitado\n  administrador() {\n    if ( this.estaAutenticadoUnAdministrador() ) {\n      // console.log(document.getElementById('ocultar1').style.display, 'hola');\n      document.getElementById('ocultar1').style.display = 'inline';\n      document.getElementById('ocultar2').style.display = 'inline';\n      document.getElementById('ocultar3').style.display = 'inline';\n      document.getElementById('ocultar4').style.display = 'none';\n      document.getElementById('ocultar5').style.display = 'none';\n      document.getElementById('ocultar6').style.display = 'inline';\n    } else {\n            document.getElementById('ocultar1').style.display = 'none';\n            document.getElementById('ocultar2').style.display = 'none';\n            document.getElementById('ocultar3').style.display = 'none';\n            document.getElementById('ocultar5').style.display = 'none';\n            document.getElementById('ocultar6').style.display = 'none';\n            document.getElementById('ocultar4').style.display = 'inline';\n            }\n    this.conductor();\n  }\n\n  conductor() {\n    if (this.estaAutenticadoUnConductor()) {\n      document.getElementById('ocultar3').style.display = 'inline';\n      document.getElementById('ocultar4').style.display = 'none';\n      document.getElementById('ocultar5').style.display = 'inline';\n      document.getElementById('ocultar6').style.display = 'inline';\n    } else {\n            document.getElementById('ocultar5').style.display = 'none';\n            }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Bus } from '../models/bus';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusService {\n\n  selectedBus: Bus;\n  bus: Bus[];\n  private buses: Bus[];\n  readonly URL_API = '/api/conductores';\n\n  constructor(private http: HttpClient) {\n    this.selectedBus = new Bus();\n    console.log('Servicio conductor listo para usarse');\n  }\n\n  getBus() {\n    return this.http.get(this.URL_API);\n  }\n\n  // tslint:disable-next-line:no-shadowed-variable\n  postBus(bus: Bus) {\n    return this.http.post(this.URL_API, bus);\n  }\n\n  putBus(bus: Bus) {\n    return this.http.put(this.URL_API + `/${ bus._id }`, bus);\n  }\n\n  // tslint:disable-next-line:variable-name\n  deleteBus(_id: string) {\n    return this.http.delete(this.URL_API + `/${ _id }`);\n  }\n\n  // ************************************************************\n\n  // devuelve un array de buses\n  getBuses2(): Bus[] {\n    this.getBuses();\n    return this.buses;\n  }\n\n  // Actualiza la variable local buses con los buses de la base de datos\n  getBuses() {\n    this.getBus()\n    .subscribe(res => {\n      this.buses = res as Bus[];\n    });\n  }\n\n  // Obtener un Bus por la placa\n  getBusByPlaca(termino: string) {\n    for (let bus of this.buses) {\n          bus = bus;\n          if (bus.placa === termino) {\n              return bus;\n            }\n      }\n  }\n\n  // Obtener un Bus por el ID\n  // tslint:disable-next-line:variable-name\n  getBusById(_id: string) {\n    for (let bus of this.buses) {\n          bus = bus;\n          if (bus._id === _id) {\n              return bus;\n            }\n      }\n  }\n\n  // Se utiliza en el buscador, obtiene un array con los buses que tengan el termino en su placa\n  buscarBuses( termino: string) {\n  let busesArr: Bus[] = [];\n  busesArr = busesArr;\n  termino = termino.toLowerCase();\n  for ( let bus of this.buses) {\n    bus = bus;\n    let placa: string = bus.placa.toLowerCase();\n    placa = placa;\n    if (placa.indexOf(termino) >= 0) {\n\n      busesArr.push(bus);\n    }\n  }\n  return busesArr;\n  }\n\n  // devuelve un array con los buses asociados a un nombre de ruta\n  busesPorRuta(nombreRuta: string): Bus[] {\n    this.getBuses();\n    const busesAsociadosRuta: Bus[] = [];\n    for (const bus of this.buses) {\n      if (bus.RutaAsociada.nombre === nombreRuta) {\n        busesAsociadosRuta.push(bus);\n      }\n    }\n    return busesAsociadosRuta;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Ruta } from '../models/ruta';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RutaService {\n\n  selectedRuta: Ruta;\n  rutas: Ruta[];\n  readonly URL_API = '/api/buses';\n\n  constructor(private http: HttpClient) {\n    this.selectedRuta = new Ruta();\n  }\n\n  getRuta() {\n    return this.http.get(this.URL_API);\n  }\n\n  // tslint:disable-next-line:no-shadowed-variable\n  postRuta(Ruta: Ruta) {\n    return this.http.post(this.URL_API, Ruta);\n  }\n\n  putRuta(Ruta1: Ruta) {\n    return this.http.put(this.URL_API + `/${ Ruta1._id }`, Ruta1);\n  }\n\n  // tslint:disable-next-line:variable-name\n  deleteRuta(_id: string) {\n    return this.http.delete(this.URL_API + `/${ _id }`);\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { Ruta } from '../models/ruta';\nimport { RutaService } from './ruta.service';\n\n@Injectable()\nexport class RutasService {\n\n  private rutas: Ruta[];\n\n    // private buses: Bus[] = [\n    //     {\n    //       _id: '1',\n    //       nombre: 'P10',\n    //       bio:  'Lorem ipsum dolor sit, ametmus quas alias.',\n    //       img: 'assets/img/P10.png',\n    //       aparicion: '2012-01-01',\n    //       casa: 'assets/img/padron.png'\n    //     },\n    //     {\n    //       _id: '1',\n    //       nombre: 'AB2',\n    //       bio: 'Lorem ipsum dolorum inventore debitis libero, non id voluptas accusantium consequuntur nesciunt',\n    //       img: 'assets/img/AB2.png',\n    //       aparicion: '2012-01-01',\n    //       casa: 'assets/img/alimentador.png'\n    //     },\n    //     {\n    //       _id: '1',\n    //       nombre: 'P13',\n    //       bio: 'Lorem ipsum, non id voluptas accusantium consequuntur nesciunt incidunt possimus blanditiis',\n    //       img: 'assets/img/P13.png',\n    //       aparicion: '2010-01-01',\n    //       casa: 'assets/img/padron.png'\n    //     },\n    //     {\n    //       _id: '1',\n    //       nombre: 'T1',\n    //       bio: 'Lorem ipsum dolor, earum inventoidunt possimus blanditiis molestias accusamus',\n    //       img: 'assets/img/T1.png',\n    //       aparicion: '2013-01-01',\n    //       casa: 'assets/img/articulado.png'\n    //     },\n    //     {\n    //       _id: '1',\n    //       nombre: 'AB1',\n    //       bio: 'Lo earum inventore debitis libero, non id voluptas accusantium consequuntur nesciunt incidu',\n    //       img: 'assets/img/AB1.png',\n    //       aparicion: '2013-01-01',\n    //       casa: 'assets/img/alimentador.png'\n    //     },\n    //     {\n    //       _id: '1',\n    //       nombre: 'P8',\n    //       bio: 'Lorem um invi adipisicing elit. Recusandae veniam excepturi quidem quasi, earum inventore de',\n    //       img: 'assets/img/P8.png',\n    //       aparicion: '2015-01-01',\n    //       casa: 'assets/img/articulado.png'\n    //     },\n    //     {\n    //       _id: '1',\n    //       nombre: 'T3',\n    //       bio: 'Loren id voluptas accusantium consequuntur nesciunt incidunt possimus blanditiis molestias accusamus quas alias.',\n    //       img: 'assets/img/T3.png',\n    //       aparicion: '2015-01-01',\n    //       casa: 'assets/img/padron.png'\n    //     }\n    //   ];\n\n  constructor(public rutaService: RutaService) {\n      console.log('Servicio listo para usarse');\n  }\n\n  // Actualiza la variable 'buses' y retorna este array\n  getRutas2(): Ruta[] {\n      this.getRutas();\n      return this.rutas;\n  }\n\n  // Obtener buses de la base de datos y guardarlos en la variable 'buses'\n  // tambien podria decirse que este metodo actualiza la variable 'buses'\n  getRutas() {\n    this.rutaService.getRuta()\n    .subscribe(res => {\n      // this.busService.buses = res as Bus[];\n      this.rutas = res as Ruta[];\n    });\n  }\n\n  // Obtiene las rutas dependiendo del tipo de bus que tengan (padron, articulado o alimentador)\n  getRutasByTipoBus(tipoRuta: string): Ruta[] {\n    const rutasPorTipo: Ruta[] = [];\n    if (this.rutas !== null) {\n    for (const ruta of this.rutas) {\n      if (ruta.imagenTipoBus === tipoRuta) {\n        rutasPorTipo.push(ruta);\n      }\n    }\n  }\n    return rutasPorTipo;\n  }\n\n  // Obtener un bus por nombre\n  getRuta(termino: string) {\n    for (let ruta of this.rutas) {\n      ruta = ruta;\n      if (ruta.nombre === termino) {\n        return ruta;\n      }\n    }\n  }\n\n  // tslint:disable-next-line:variable-name\n  getRutaById(_id: string) {\n    for (let ruta of this.rutas) {\n      ruta = ruta;\n      if (ruta._id === _id) {\n        return ruta;\n      }\n    }\n  }\n\n  // Obtener lista de buses por nombre.. se usa en filtrar\n  buscarRutas( termino: string) {\n    let RutasArr: Ruta[] = [];\n    RutasArr = RutasArr;\n    termino = termino.toLowerCase();\n    for ( let bus of this.rutas) {\n      bus = bus;\n      let nombre: string = bus.nombre.toLowerCase();\n      nombre = nombre;\n      if (nombre.indexOf(termino) >= 0) {\n\n        RutasArr.push(bus);\n        // console.log(busesArr);\n      }\n    }\n    return RutasArr;\n  }\n\n}\n\n//     export interface Bus {\n//           nombre: string;\n//           bio: string;\n//           img: string;\n//           aparicion: string;\n//           casa: string;\n// }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n// const socket = io.connect('http://localhost:3001', {forceNew: true});\n\n// socket.on('mensaaje', (data) => {\n//   console.log(data);\n// });\n\n\n\n"],"sourceRoot":"webpack:///"}